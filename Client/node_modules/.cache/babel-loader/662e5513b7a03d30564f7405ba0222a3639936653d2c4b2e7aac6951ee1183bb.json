{"ast":null,"code":"/**\n * @fileoverview Disallow the use of process.env()\n * @author Vignesh Anand\n * @deprecated in ESLint v7.0.0\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\nmodule.exports = {\n  meta: {\n    deprecated: true,\n    replacedBy: [],\n    type: \"suggestion\",\n    docs: {\n      description: \"Disallow the use of `process.env`\",\n      recommended: false,\n      url: \"https://eslint.org/docs/latest/rules/no-process-env\"\n    },\n    schema: [],\n    messages: {\n      unexpectedProcessEnv: \"Unexpected use of process.env.\"\n    }\n  },\n  create(context) {\n    return {\n      MemberExpression(node) {\n        const objectName = node.object.name,\n          propertyName = node.property.name;\n        if (objectName === \"process\" && !node.computed && propertyName && propertyName === \"env\") {\n          context.report({\n            node,\n            messageId: \"unexpectedProcessEnv\"\n          });\n        }\n      }\n    };\n  }\n};","map":{"version":3,"names":["module","exports","meta","deprecated","replacedBy","type","docs","description","recommended","url","schema","messages","unexpectedProcessEnv","create","context","MemberExpression","node","objectName","object","name","propertyName","property","computed","report","messageId"],"sources":["C:/Users/iarha/OneDrive/Desktop/React mini/mega project/remotre code collab/Frontend/node_modules/eslint/lib/rules/no-process-env.js"],"sourcesContent":["/**\n * @fileoverview Disallow the use of process.env()\n * @author Vignesh Anand\n * @deprecated in ESLint v7.0.0\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\nmodule.exports = {\n    meta: {\n        deprecated: true,\n\n        replacedBy: [],\n\n        type: \"suggestion\",\n\n        docs: {\n            description: \"Disallow the use of `process.env`\",\n            recommended: false,\n            url: \"https://eslint.org/docs/latest/rules/no-process-env\"\n        },\n\n        schema: [],\n\n        messages: {\n            unexpectedProcessEnv: \"Unexpected use of process.env.\"\n        }\n    },\n\n    create(context) {\n\n        return {\n\n            MemberExpression(node) {\n                const objectName = node.object.name,\n                    propertyName = node.property.name;\n\n                if (objectName === \"process\" && !node.computed && propertyName && propertyName === \"env\") {\n                    context.report({ node, messageId: \"unexpectedProcessEnv\" });\n                }\n\n            }\n\n        };\n\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ;AACA;AACA;;AAEA;AACAA,MAAM,CAACC,OAAO,GAAG;EACbC,IAAI,EAAE;IACFC,UAAU,EAAE,IAAI;IAEhBC,UAAU,EAAE,EAAE;IAEdC,IAAI,EAAE,YAAY;IAElBC,IAAI,EAAE;MACFC,WAAW,EAAE,mCAAmC;MAChDC,WAAW,EAAE,KAAK;MAClBC,GAAG,EAAE;IACT,CAAC;IAEDC,MAAM,EAAE,EAAE;IAEVC,QAAQ,EAAE;MACNC,oBAAoB,EAAE;IAC1B;EACJ,CAAC;EAEDC,MAAMA,CAACC,OAAO,EAAE;IAEZ,OAAO;MAEHC,gBAAgBA,CAACC,IAAI,EAAE;QACnB,MAAMC,UAAU,GAAGD,IAAI,CAACE,MAAM,CAACC,IAAI;UAC/BC,YAAY,GAAGJ,IAAI,CAACK,QAAQ,CAACF,IAAI;QAErC,IAAIF,UAAU,KAAK,SAAS,IAAI,CAACD,IAAI,CAACM,QAAQ,IAAIF,YAAY,IAAIA,YAAY,KAAK,KAAK,EAAE;UACtFN,OAAO,CAACS,MAAM,CAAC;YAAEP,IAAI;YAAEQ,SAAS,EAAE;UAAuB,CAAC,CAAC;QAC/D;MAEJ;IAEJ,CAAC;EAEL;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}