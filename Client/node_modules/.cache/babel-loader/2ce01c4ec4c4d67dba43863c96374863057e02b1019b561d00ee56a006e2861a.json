{"ast":null,"code":"/**\n * @fileoverview Utilities to operate on strings.\n * @author Stephen Wade\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\nconst Graphemer = require(\"graphemer\").default;\n\n//------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\n// eslint-disable-next-line no-control-regex -- intentionally including control characters\nconst ASCII_REGEX = /^[\\u0000-\\u007f]*$/u;\n\n/** @type {Graphemer | undefined} */\nlet splitter;\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\n/**\n * Converts the first letter of a string to uppercase.\n * @param {string} string The string to operate on\n * @returns {string} The converted string\n */\nfunction upperCaseFirst(string) {\n  if (string.length <= 1) {\n    return string.toUpperCase();\n  }\n  return string[0].toUpperCase() + string.slice(1);\n}\n\n/**\n * Counts graphemes in a given string.\n * @param {string} value A string to count graphemes.\n * @returns {number} The number of graphemes in `value`.\n */\nfunction getGraphemeCount(value) {\n  if (ASCII_REGEX.test(value)) {\n    return value.length;\n  }\n  if (!splitter) {\n    splitter = new Graphemer();\n  }\n  return splitter.countGraphemes(value);\n}\nmodule.exports = {\n  upperCaseFirst,\n  getGraphemeCount\n};","map":{"version":3,"names":["Graphemer","require","default","ASCII_REGEX","splitter","upperCaseFirst","string","length","toUpperCase","slice","getGraphemeCount","value","test","countGraphemes","module","exports"],"sources":["C:/Users/iarha/OneDrive/Desktop/React mini/mega project/remotre code collab/Frontend/node_modules/eslint/lib/shared/string-utils.js"],"sourcesContent":["/**\n * @fileoverview Utilities to operate on strings.\n * @author Stephen Wade\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nconst Graphemer = require(\"graphemer\").default;\n\n//------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\n// eslint-disable-next-line no-control-regex -- intentionally including control characters\nconst ASCII_REGEX = /^[\\u0000-\\u007f]*$/u;\n\n/** @type {Graphemer | undefined} */\nlet splitter;\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\n/**\n * Converts the first letter of a string to uppercase.\n * @param {string} string The string to operate on\n * @returns {string} The converted string\n */\nfunction upperCaseFirst(string) {\n    if (string.length <= 1) {\n        return string.toUpperCase();\n    }\n    return string[0].toUpperCase() + string.slice(1);\n}\n\n/**\n * Counts graphemes in a given string.\n * @param {string} value A string to count graphemes.\n * @returns {number} The number of graphemes in `value`.\n */\nfunction getGraphemeCount(value) {\n    if (ASCII_REGEX.test(value)) {\n        return value.length;\n    }\n\n    if (!splitter) {\n        splitter = new Graphemer();\n    }\n\n    return splitter.countGraphemes(value);\n}\n\nmodule.exports = {\n    upperCaseFirst,\n    getGraphemeCount\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,WAAW,CAAC,CAACC,OAAO;;AAE9C;AACA;AACA;;AAEA;AACA,MAAMC,WAAW,GAAG,qBAAqB;;AAEzC;AACA,IAAIC,QAAQ;;AAEZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASC,cAAcA,CAACC,MAAM,EAAE;EAC5B,IAAIA,MAAM,CAACC,MAAM,IAAI,CAAC,EAAE;IACpB,OAAOD,MAAM,CAACE,WAAW,CAAC,CAAC;EAC/B;EACA,OAAOF,MAAM,CAAC,CAAC,CAAC,CAACE,WAAW,CAAC,CAAC,GAAGF,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASC,gBAAgBA,CAACC,KAAK,EAAE;EAC7B,IAAIR,WAAW,CAACS,IAAI,CAACD,KAAK,CAAC,EAAE;IACzB,OAAOA,KAAK,CAACJ,MAAM;EACvB;EAEA,IAAI,CAACH,QAAQ,EAAE;IACXA,QAAQ,GAAG,IAAIJ,SAAS,CAAC,CAAC;EAC9B;EAEA,OAAOI,QAAQ,CAACS,cAAc,CAACF,KAAK,CAAC;AACzC;AAEAG,MAAM,CAACC,OAAO,GAAG;EACbV,cAAc;EACdK;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}