{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar ast = /*#__PURE__*/Object.freeze({\n  __proto__: null\n});\nconst latestEcmaVersion = 2025;\nlet largeIdStartRanges = undefined;\nlet largeIdContinueRanges = undefined;\nfunction isIdStart(cp) {\n  if (cp < 0x41) return false;\n  if (cp < 0x5b) return true;\n  if (cp < 0x61) return false;\n  if (cp < 0x7b) return true;\n  return isLargeIdStart(cp);\n}\nfunction isIdContinue(cp) {\n  if (cp < 0x30) return false;\n  if (cp < 0x3a) return true;\n  if (cp < 0x41) return false;\n  if (cp < 0x5b) return true;\n  if (cp === 0x5f) return true;\n  if (cp < 0x61) return false;\n  if (cp < 0x7b) return true;\n  return isLargeIdStart(cp) || isLargeIdContinue(cp);\n}\nfunction isLargeIdStart(cp) {\n  return isInRange(cp, largeIdStartRanges !== null && largeIdStartRanges !== void 0 ? largeIdStartRanges : largeIdStartRanges = initLargeIdStartRanges());\n}\nfunction isLargeIdContinue(cp) {\n  return isInRange(cp, largeIdContinueRanges !== null && largeIdContinueRanges !== void 0 ? largeIdContinueRanges : largeIdContinueRanges = initLargeIdContinueRanges());\n}\nfunction initLargeIdStartRanges() {\n  return restoreRanges(\"4q 0 b 0 5 0 6 m 2 u 2 cp 5 b f 4 8 0 2 0 3m 4 2 1 3 3 2 0 7 0 2 2 2 0 2 j 2 2a 2 3u 9 4l 2 11 3 0 7 14 20 q 5 3 1a 16 10 1 2 2q 2 0 g 1 8 1 b 2 3 0 h 0 2 t u 2g c 0 p w a 1 5 0 6 l 5 0 a 0 4 0 o o 8 a 6 n 2 5 i 15 1n 1h 4 0 j 0 8 9 g f 5 7 3 1 3 l 2 6 2 0 4 3 4 0 h 0 e 1 2 2 f 1 b 0 9 5 5 1 3 l 2 6 2 1 2 1 2 1 w 3 2 0 k 2 h 8 2 2 2 l 2 6 2 1 2 4 4 0 j 0 g 1 o 0 c 7 3 1 3 l 2 6 2 1 2 4 4 0 v 1 2 2 g 0 i 0 2 5 4 2 2 3 4 1 2 0 2 1 4 1 4 2 4 b n 0 1h 7 2 2 2 m 2 f 4 0 r 2 3 0 3 1 v 0 5 7 2 2 2 m 2 9 2 4 4 0 w 1 2 1 g 1 i 8 2 2 2 14 3 0 h 0 6 2 9 2 p 5 6 h 4 n 2 8 2 0 3 6 1n 1b 2 1 d 6 1n 1 2 0 2 4 2 n 2 0 2 9 2 1 a 0 3 4 2 0 m 3 x 0 1s 7 2 z s 4 38 16 l 0 h 5 5 3 4 0 4 1 8 2 5 c d 0 i 11 2 0 6 0 3 16 2 98 2 3 3 6 2 0 2 3 3 14 2 3 3 w 2 3 3 6 2 0 2 3 3 e 2 1k 2 3 3 1u 12 f h 2d 3 5 4 h7 3 g 2 p 6 22 4 a 8 h e i f h f c 2 2 g 1f 10 0 5 0 1w 2g 8 14 2 0 6 1x b u 1e t 3 4 c 17 5 p 1j m a 1g 2b 0 2m 1a i 7 1j t e 1 b 17 r z 16 2 b z 3 a 6 16 3 2 16 3 2 5 2 1 4 0 6 5b 1t 7p 3 5 3 11 3 5 3 7 2 0 2 0 2 0 2 u 3 1g 2 6 2 0 4 2 2 6 4 3 3 5 5 c 6 2 2 6 39 0 e 0 h c 2u 0 5 0 3 9 2 0 3 5 7 0 2 0 2 0 2 f 3 3 6 4 5 0 i 14 22g 6c 7 3 4 1 d 11 2 0 6 0 3 1j 8 0 h m a 6 2 6 2 6 2 6 2 6 2 6 2 6 2 6 fb 2 q 8 8 4 3 4 5 2d 5 4 2 2h 2 3 6 16 2 2l i v 1d f e9 533 1t h3g 1w 19 3 7g 4 f b 1 l 1a h u 3 27 14 8 3 2u 3 1u 3 1 2 0 2 7 m f 2 2 2 3 2 m u 1f f 1d 1r 5 4 0 2 1 c r b m q s 8 1a t 0 h 4 2 9 b 4 2 14 o 2 2 7 l m 4 0 4 1d 2 0 4 1 3 4 3 0 2 0 p 2 3 a 8 2 d 5 3 5 3 5 a 6 2 6 2 16 2 d 7 36 u 8mb d m 5 1c 6it a5 3 2x 13 6 d 4 6 0 2 9 2 c 2 4 2 0 2 1 2 1 2 2z y a2 j 1r 3 1h 15 b 39 4 2 3q 11 p 7 p c 2g 4 5 3 5 3 5 3 2 10 b 2 p 2 i 2 1 2 e 3 d z 3e 1y 1g 7g s 4 1c 1c v e t 6 11 b t 3 z 5 7 2 4 17 4d j z 5 z 5 13 9 1f d a 2 e 2 6 2 1 2 a 2 e 2 6 2 1 4 1f d 8m a l b 7 p 5 2 15 2 8 1y 5 3 0 2 17 2 1 4 0 3 m b m a u 1u i 2 1 b l b p 1z 1j 7 1 1t 0 g 3 2 2 2 s 17 s 4 s 10 7 2 r s 1h b l b i e h 33 20 1k 1e e 1e e z 13 r a m 6z 15 7 1 h 2 1o s b 0 9 l 17 h 1b k s m d 1g 1m 1 3 0 e 18 x o r z u 0 3 0 9 y 4 0 d 1b f 3 m 0 2 0 10 h 2 o k 1 1s 6 2 0 2 3 2 e 2 9 8 1a 13 7 3 1 3 l 2 6 2 1 2 4 4 0 j 0 d 4 v 9 2 0 3 0 2 11 2 0 q 0 2 0 19 1g j 3 l 2 v 1b l 1 2 0 55 1a 16 3 11 1b l 0 1o 16 e 0 20 q 12 6 56 17 39 1r w 7 3 0 3 7 2 1 2 n g 0 2 0 2n 7 3 12 h 0 2 0 t 0 b 13 8 0 m 0 c 19 k 0 j 20 5k w w 8 2 10 i 0 1e t 35 6 2 1 2 11 m 0 q 5 2 1 2 v f 0 94 i g 0 2 c 2 x 3h 0 28 pl 2v 32 i 5f 219 2o g tr i 5 q 32y 6 g6 5a2 t 1cz fs 8 u i 26 i t j 1b h 3 w k 6 i c1 18 5w 1r 3l 22 6 0 1v c 1t 1 2 0 t 4qf 9 yd 16 9 6w8 3 2 6 2 1 2 82 g 0 u 2 3 0 f 3 9 az 1s5 2y 6 c 4 8 8 9 4mf 2c 2 1y 2 1 3 0 3 1 3 3 2 b 2 0 2 6 2 1s 2 3 3 7 2 6 2 r 2 3 2 4 2 0 4 6 2 9f 3 o 2 o 2 u 2 o 2 u 2 o 2 u 2 o 2 u 2 o 2 7 1f9 u 7 5 7a 1p 43 18 b 6 h 0 8y t j 17 dh r 6d t 3 0 ds 6 2 3 2 1 2 e 2 5g 1o 1v 8 0 xh 3 2 q 2 1 2 0 3 0 2 9 2 3 2 0 2 0 7 0 5 0 2 0 2 0 2 2 2 1 2 0 3 0 2 0 2 0 2 0 2 0 2 1 2 0 3 3 2 6 2 3 2 3 2 0 2 9 2 g 6 2 2 4 2 g 3et wyn x 37d 7 65 3 4g1 f 5rk g h9 1wj f1 15v 3t6 6 38f\");\n}\nfunction initLargeIdContinueRanges() {\n  return restoreRanges(\"53 0 g9 33 o 0 70 4 7e 18 2 0 2 1 2 1 2 0 21 a 1d u 7 0 2u 6 3 5 3 1 2 3 3 9 o 0 v q 2k a g 9 y 8 a 0 p 3 2 8 2 2 2 4 18 2 1o 8 17 n 2 w 1j 2 2 h 2 6 b 1 3 9 i 2 1l 0 2 6 3 1 3 2 a 0 b 1 3 9 f 0 3 2 1l 0 2 4 5 1 3 2 4 0 l b 4 0 c 2 1l 0 2 7 2 2 2 2 l 1 3 9 b 5 2 2 1l 0 2 6 3 1 3 2 8 2 b 1 3 9 j 0 1o 4 4 2 2 3 a 0 f 9 h 4 1k 0 2 6 2 2 2 3 8 1 c 1 3 9 i 2 1l 0 2 6 2 2 2 3 8 1 c 1 3 9 4 0 d 3 1k 1 2 6 2 2 2 3 a 0 b 1 3 9 i 2 1z 0 5 5 2 0 2 7 7 9 3 1 1q 0 3 6 d 7 2 9 2g 0 3 8 c 6 2 9 1r 1 7 9 c 0 2 0 2 0 5 1 1e j 2 1 6 a 2 z a 0 2t j 2 9 d 3 5 2 2 2 3 6 4 3 e b 2 e jk 2 a 8 pt 3 t 2 u 1 v 1 1t v a 0 3 9 y 2 2 a 40 0 3b b 5 b b 9 3l a 1p 4 1m 9 2 s 3 a 7 9 n d 2 f 1e 4 1c g c 9 i 8 d 2 v c 3 9 19 d 1d j 9 9 7 9 3b 2 2 k 5 0 7 0 3 2 5j 1r el 1 1e 1 k 0 3g c 5 0 4 b 2db 2 3y 0 2p v ff 5 2y 1 2p 0 n51 9 1y 0 5 9 x 1 29 1 7l 0 4 0 5 0 o 4 5 0 2c 1 1f h b 9 7 h e a t 7 q c 19 3 1c d g 9 c 0 b 9 1c d d 0 9 1 3 9 y 2 1f 0 2 2 3 1 6 1 2 0 16 4 6 1 6l 7 2 1 3 9 fmt 0 ki f h f 4 1 p 2 5d 9 12 0 12 0 ig 0 6b 0 46 4 86 9 120 2 2 1 6 3 15 2 5 0 4m 1 fy 3 9 9 7 9 w 4 8u 1 28 3 1z a 1e 3 3f 2 1i e w a 3 1 b 3 1a a 8 0 1a 9 7 2 11 d 2 9 6 1 19 0 d 2 1d d 9 3 2 b 2b b 7 0 3 0 4e b 6 9 7 3 1k 1 2 6 3 1 3 2 a 0 b 1 3 6 4 4 1w 8 2 0 3 0 2 3 2 4 2 0 f 1 2b h a 9 5 0 2a j d 9 5y 6 3 8 s 1 2b g g 9 2a c 9 9 7 j 1m e 5 9 6r e 4m 9 1z 5 2 1 3 3 2 0 2 1 d 9 3c 6 3 6 4 0 t 9 15 6 2 3 9 0 a a 1b f 9j 9 1i 7 2 7 h 9 1l l 2 d 3f 5 4 0 2 1 2 6 2 0 9 9 1d 4 2 1 2 4 9 9 96 3 a 1 2 0 1d 6 4 4 e a 44m 0 7 e 8uh r 1t3 9 2f 9 13 4 1o 6 q 9 ev 9 d2 0 2 1i 8 3 2a 0 c 1 f58 1 382 9 ef 19 3 m f3 4 4 5 9 7 3 6 v 3 45 2 13e 1d e9 1i 5 1d 9 0 f 0 n 4 2 e 11t 6 2 g 3 6 2 1 2 4 2t 0 4h 6 a 9 9x 0 1q d dv d 6t 1 2 9 k6 6 32 6 6 9 3o7 9 gvt3 6n\");\n}\nfunction isInRange(cp, ranges) {\n  let l = 0,\n    r = ranges.length / 2 | 0,\n    i = 0,\n    min = 0,\n    max = 0;\n  while (l < r) {\n    i = (l + r) / 2 | 0;\n    min = ranges[2 * i];\n    max = ranges[2 * i + 1];\n    if (cp < min) {\n      r = i;\n    } else if (cp > max) {\n      l = i + 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\nfunction restoreRanges(data) {\n  let last = 0;\n  return data.split(\" \").map(s => last += parseInt(s, 36) | 0);\n}\nclass DataSet {\n  constructor(raw2018, raw2019, raw2020, raw2021, raw2022, raw2023, raw2024, raw2025) {\n    this._raw2018 = raw2018;\n    this._raw2019 = raw2019;\n    this._raw2020 = raw2020;\n    this._raw2021 = raw2021;\n    this._raw2022 = raw2022;\n    this._raw2023 = raw2023;\n    this._raw2024 = raw2024;\n    this._raw2025 = raw2025;\n  }\n  get es2018() {\n    var _a;\n    return (_a = this._set2018) !== null && _a !== void 0 ? _a : this._set2018 = new Set(this._raw2018.split(\" \"));\n  }\n  get es2019() {\n    var _a;\n    return (_a = this._set2019) !== null && _a !== void 0 ? _a : this._set2019 = new Set(this._raw2019.split(\" \"));\n  }\n  get es2020() {\n    var _a;\n    return (_a = this._set2020) !== null && _a !== void 0 ? _a : this._set2020 = new Set(this._raw2020.split(\" \"));\n  }\n  get es2021() {\n    var _a;\n    return (_a = this._set2021) !== null && _a !== void 0 ? _a : this._set2021 = new Set(this._raw2021.split(\" \"));\n  }\n  get es2022() {\n    var _a;\n    return (_a = this._set2022) !== null && _a !== void 0 ? _a : this._set2022 = new Set(this._raw2022.split(\" \"));\n  }\n  get es2023() {\n    var _a;\n    return (_a = this._set2023) !== null && _a !== void 0 ? _a : this._set2023 = new Set(this._raw2023.split(\" \"));\n  }\n  get es2024() {\n    var _a;\n    return (_a = this._set2024) !== null && _a !== void 0 ? _a : this._set2024 = new Set(this._raw2024.split(\" \"));\n  }\n  get es2025() {\n    var _a;\n    return (_a = this._set2025) !== null && _a !== void 0 ? _a : this._set2025 = new Set(this._raw2025.split(\" \"));\n  }\n}\nconst gcNameSet = new Set([\"General_Category\", \"gc\"]);\nconst scNameSet = new Set([\"Script\", \"Script_Extensions\", \"sc\", \"scx\"]);\nconst gcValueSets = new DataSet(\"C Cased_Letter Cc Cf Close_Punctuation Cn Co Combining_Mark Connector_Punctuation Control Cs Currency_Symbol Dash_Punctuation Decimal_Number Enclosing_Mark Final_Punctuation Format Initial_Punctuation L LC Letter Letter_Number Line_Separator Ll Lm Lo Lowercase_Letter Lt Lu M Mark Math_Symbol Mc Me Mn Modifier_Letter Modifier_Symbol N Nd Nl No Nonspacing_Mark Number Open_Punctuation Other Other_Letter Other_Number Other_Punctuation Other_Symbol P Paragraph_Separator Pc Pd Pe Pf Pi Po Private_Use Ps Punctuation S Sc Separator Sk Sm So Space_Separator Spacing_Mark Surrogate Symbol Titlecase_Letter Unassigned Uppercase_Letter Z Zl Zp Zs cntrl digit punct\", \"\", \"\", \"\", \"\", \"\", \"\", \"\");\nconst scValueSets = new DataSet(\"Adlam Adlm Aghb Ahom Anatolian_Hieroglyphs Arab Arabic Armenian Armi Armn Avestan Avst Bali Balinese Bamu Bamum Bass Bassa_Vah Batak Batk Beng Bengali Bhaiksuki Bhks Bopo Bopomofo Brah Brahmi Brai Braille Bugi Buginese Buhd Buhid Cakm Canadian_Aboriginal Cans Cari Carian Caucasian_Albanian Chakma Cham Cher Cherokee Common Copt Coptic Cprt Cuneiform Cypriot Cyrillic Cyrl Deseret Deva Devanagari Dsrt Dupl Duployan Egyp Egyptian_Hieroglyphs Elba Elbasan Ethi Ethiopic Geor Georgian Glag Glagolitic Gonm Goth Gothic Gran Grantha Greek Grek Gujarati Gujr Gurmukhi Guru Han Hang Hangul Hani Hano Hanunoo Hatr Hatran Hebr Hebrew Hira Hiragana Hluw Hmng Hung Imperial_Aramaic Inherited Inscriptional_Pahlavi Inscriptional_Parthian Ital Java Javanese Kaithi Kali Kana Kannada Katakana Kayah_Li Khar Kharoshthi Khmer Khmr Khoj Khojki Khudawadi Knda Kthi Lana Lao Laoo Latin Latn Lepc Lepcha Limb Limbu Lina Linb Linear_A Linear_B Lisu Lyci Lycian Lydi Lydian Mahajani Mahj Malayalam Mand Mandaic Mani Manichaean Marc Marchen Masaram_Gondi Meetei_Mayek Mend Mende_Kikakui Merc Mero Meroitic_Cursive Meroitic_Hieroglyphs Miao Mlym Modi Mong Mongolian Mro Mroo Mtei Mult Multani Myanmar Mymr Nabataean Narb Nbat New_Tai_Lue Newa Nko Nkoo Nshu Nushu Ogam Ogham Ol_Chiki Olck Old_Hungarian Old_Italic Old_North_Arabian Old_Permic Old_Persian Old_South_Arabian Old_Turkic Oriya Orkh Orya Osage Osge Osma Osmanya Pahawh_Hmong Palm Palmyrene Pau_Cin_Hau Pauc Perm Phag Phags_Pa Phli Phlp Phnx Phoenician Plrd Prti Psalter_Pahlavi Qaac Qaai Rejang Rjng Runic Runr Samaritan Samr Sarb Saur Saurashtra Sgnw Sharada Shavian Shaw Shrd Sidd Siddham SignWriting Sind Sinh Sinhala Sora Sora_Sompeng Soyo Soyombo Sund Sundanese Sylo Syloti_Nagri Syrc Syriac Tagalog Tagb Tagbanwa Tai_Le Tai_Tham Tai_Viet Takr Takri Tale Talu Tamil Taml Tang Tangut Tavt Telu Telugu Tfng Tglg Thaa Thaana Thai Tibetan Tibt Tifinagh Tirh Tirhuta Ugar Ugaritic Vai Vaii Wara Warang_Citi Xpeo Xsux Yi Yiii Zanabazar_Square Zanb Zinh Zyyy\", \"Dogr Dogra Gong Gunjala_Gondi Hanifi_Rohingya Maka Makasar Medefaidrin Medf Old_Sogdian Rohg Sogd Sogdian Sogo\", \"Elym Elymaic Hmnp Nand Nandinagari Nyiakeng_Puachue_Hmong Wancho Wcho\", \"Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi\", \"Cpmn Cypro_Minoan Old_Uyghur Ougr Tangsa Tnsa Toto Vith Vithkuqi\", \"Gara Garay Gukh Gurung_Khema Hrkt Katakana_Or_Hiragana Kawi Kirat_Rai Krai Nag_Mundari Nagm Ol_Onal Onao Sunu Sunuwar Todhri Todr Tulu_Tigalari Tutg Unknown Zzzz\", \"\", \"\");\nconst binPropertySets = new DataSet(\"AHex ASCII ASCII_Hex_Digit Alpha Alphabetic Any Assigned Bidi_C Bidi_Control Bidi_M Bidi_Mirrored CI CWCF CWCM CWKCF CWL CWT CWU Case_Ignorable Cased Changes_When_Casefolded Changes_When_Casemapped Changes_When_Lowercased Changes_When_NFKC_Casefolded Changes_When_Titlecased Changes_When_Uppercased DI Dash Default_Ignorable_Code_Point Dep Deprecated Dia Diacritic Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Ext Extender Gr_Base Gr_Ext Grapheme_Base Grapheme_Extend Hex Hex_Digit IDC IDS IDSB IDST IDS_Binary_Operator IDS_Trinary_Operator ID_Continue ID_Start Ideo Ideographic Join_C Join_Control LOE Logical_Order_Exception Lower Lowercase Math NChar Noncharacter_Code_Point Pat_Syn Pat_WS Pattern_Syntax Pattern_White_Space QMark Quotation_Mark RI Radical Regional_Indicator SD STerm Sentence_Terminal Soft_Dotted Term Terminal_Punctuation UIdeo Unified_Ideograph Upper Uppercase VS Variation_Selector White_Space XIDC XIDS XID_Continue XID_Start space\", \"Extended_Pictographic\", \"\", \"EBase EComp EMod EPres ExtPict\", \"\", \"\", \"\", \"\");\nconst binPropertyOfStringsSets = new DataSet(\"\", \"\", \"\", \"\", \"\", \"\", \"Basic_Emoji Emoji_Keycap_Sequence RGI_Emoji RGI_Emoji_Flag_Sequence RGI_Emoji_Modifier_Sequence RGI_Emoji_Tag_Sequence RGI_Emoji_ZWJ_Sequence\", \"\");\nfunction isValidUnicodeProperty(version, name, value) {\n  if (gcNameSet.has(name)) {\n    return version >= 2018 && gcValueSets.es2018.has(value);\n  }\n  if (scNameSet.has(name)) {\n    return version >= 2018 && scValueSets.es2018.has(value) || version >= 2019 && scValueSets.es2019.has(value) || version >= 2020 && scValueSets.es2020.has(value) || version >= 2021 && scValueSets.es2021.has(value) || version >= 2022 && scValueSets.es2022.has(value) || version >= 2023 && scValueSets.es2023.has(value);\n  }\n  return false;\n}\nfunction isValidLoneUnicodeProperty(version, value) {\n  return version >= 2018 && binPropertySets.es2018.has(value) || version >= 2019 && binPropertySets.es2019.has(value) || version >= 2021 && binPropertySets.es2021.has(value);\n}\nfunction isValidLoneUnicodePropertyOfString(version, value) {\n  return version >= 2024 && binPropertyOfStringsSets.es2024.has(value);\n}\nconst BACKSPACE = 0x08;\nconst CHARACTER_TABULATION = 0x09;\nconst LINE_FEED = 0x0a;\nconst LINE_TABULATION = 0x0b;\nconst FORM_FEED = 0x0c;\nconst CARRIAGE_RETURN = 0x0d;\nconst EXCLAMATION_MARK = 0x21;\nconst NUMBER_SIGN = 0x23;\nconst DOLLAR_SIGN = 0x24;\nconst PERCENT_SIGN = 0x25;\nconst AMPERSAND = 0x26;\nconst LEFT_PARENTHESIS = 0x28;\nconst RIGHT_PARENTHESIS = 0x29;\nconst ASTERISK = 0x2a;\nconst PLUS_SIGN = 0x2b;\nconst COMMA = 0x2c;\nconst HYPHEN_MINUS = 0x2d;\nconst FULL_STOP = 0x2e;\nconst SOLIDUS = 0x2f;\nconst DIGIT_ZERO = 0x30;\nconst DIGIT_ONE = 0x31;\nconst DIGIT_SEVEN = 0x37;\nconst DIGIT_NINE = 0x39;\nconst COLON = 0x3a;\nconst SEMICOLON = 0x3b;\nconst LESS_THAN_SIGN = 0x3c;\nconst EQUALS_SIGN = 0x3d;\nconst GREATER_THAN_SIGN = 0x3e;\nconst QUESTION_MARK = 0x3f;\nconst COMMERCIAL_AT = 0x40;\nconst LATIN_CAPITAL_LETTER_A = 0x41;\nconst LATIN_CAPITAL_LETTER_B = 0x42;\nconst LATIN_CAPITAL_LETTER_D = 0x44;\nconst LATIN_CAPITAL_LETTER_F = 0x46;\nconst LATIN_CAPITAL_LETTER_P = 0x50;\nconst LATIN_CAPITAL_LETTER_S = 0x53;\nconst LATIN_CAPITAL_LETTER_W = 0x57;\nconst LATIN_CAPITAL_LETTER_Z = 0x5a;\nconst LOW_LINE = 0x5f;\nconst LATIN_SMALL_LETTER_A = 0x61;\nconst LATIN_SMALL_LETTER_B = 0x62;\nconst LATIN_SMALL_LETTER_C = 0x63;\nconst LATIN_SMALL_LETTER_D = 0x64;\nconst LATIN_SMALL_LETTER_F = 0x66;\nconst LATIN_SMALL_LETTER_G = 0x67;\nconst LATIN_SMALL_LETTER_I = 0x69;\nconst LATIN_SMALL_LETTER_K = 0x6b;\nconst LATIN_SMALL_LETTER_M = 0x6d;\nconst LATIN_SMALL_LETTER_N = 0x6e;\nconst LATIN_SMALL_LETTER_P = 0x70;\nconst LATIN_SMALL_LETTER_Q = 0x71;\nconst LATIN_SMALL_LETTER_R = 0x72;\nconst LATIN_SMALL_LETTER_S = 0x73;\nconst LATIN_SMALL_LETTER_T = 0x74;\nconst LATIN_SMALL_LETTER_U = 0x75;\nconst LATIN_SMALL_LETTER_V = 0x76;\nconst LATIN_SMALL_LETTER_W = 0x77;\nconst LATIN_SMALL_LETTER_X = 0x78;\nconst LATIN_SMALL_LETTER_Y = 0x79;\nconst LATIN_SMALL_LETTER_Z = 0x7a;\nconst LEFT_SQUARE_BRACKET = 0x5b;\nconst REVERSE_SOLIDUS = 0x5c;\nconst RIGHT_SQUARE_BRACKET = 0x5d;\nconst CIRCUMFLEX_ACCENT = 0x5e;\nconst GRAVE_ACCENT = 0x60;\nconst LEFT_CURLY_BRACKET = 0x7b;\nconst VERTICAL_LINE = 0x7c;\nconst RIGHT_CURLY_BRACKET = 0x7d;\nconst TILDE = 0x7e;\nconst ZERO_WIDTH_NON_JOINER = 0x200c;\nconst ZERO_WIDTH_JOINER = 0x200d;\nconst LINE_SEPARATOR = 0x2028;\nconst PARAGRAPH_SEPARATOR = 0x2029;\nconst MIN_CODE_POINT = 0x00;\nconst MAX_CODE_POINT = 0x10ffff;\nfunction isLatinLetter(code) {\n  return code >= LATIN_CAPITAL_LETTER_A && code <= LATIN_CAPITAL_LETTER_Z || code >= LATIN_SMALL_LETTER_A && code <= LATIN_SMALL_LETTER_Z;\n}\nfunction isDecimalDigit(code) {\n  return code >= DIGIT_ZERO && code <= DIGIT_NINE;\n}\nfunction isOctalDigit(code) {\n  return code >= DIGIT_ZERO && code <= DIGIT_SEVEN;\n}\nfunction isHexDigit(code) {\n  return code >= DIGIT_ZERO && code <= DIGIT_NINE || code >= LATIN_CAPITAL_LETTER_A && code <= LATIN_CAPITAL_LETTER_F || code >= LATIN_SMALL_LETTER_A && code <= LATIN_SMALL_LETTER_F;\n}\nfunction isLineTerminator(code) {\n  return code === LINE_FEED || code === CARRIAGE_RETURN || code === LINE_SEPARATOR || code === PARAGRAPH_SEPARATOR;\n}\nfunction isValidUnicode(code) {\n  return code >= MIN_CODE_POINT && code <= MAX_CODE_POINT;\n}\nfunction digitToInt(code) {\n  if (code >= LATIN_SMALL_LETTER_A && code <= LATIN_SMALL_LETTER_F) {\n    return code - LATIN_SMALL_LETTER_A + 10;\n  }\n  if (code >= LATIN_CAPITAL_LETTER_A && code <= LATIN_CAPITAL_LETTER_F) {\n    return code - LATIN_CAPITAL_LETTER_A + 10;\n  }\n  return code - DIGIT_ZERO;\n}\nfunction isLeadSurrogate(code) {\n  return code >= 0xd800 && code <= 0xdbff;\n}\nfunction isTrailSurrogate(code) {\n  return code >= 0xdc00 && code <= 0xdfff;\n}\nfunction combineSurrogatePair(lead, trail) {\n  return (lead - 0xd800) * 0x400 + (trail - 0xdc00) + 0x10000;\n}\nclass GroupSpecifiersAsES2018 {\n  constructor() {\n    this.groupName = new Set();\n  }\n  clear() {\n    this.groupName.clear();\n  }\n  isEmpty() {\n    return !this.groupName.size;\n  }\n  hasInPattern(name) {\n    return this.groupName.has(name);\n  }\n  hasInScope(name) {\n    return this.hasInPattern(name);\n  }\n  addToScope(name) {\n    this.groupName.add(name);\n  }\n  enterDisjunction() {}\n  enterAlternative() {}\n  leaveDisjunction() {}\n}\nclass BranchID {\n  constructor(parent, base) {\n    this.parent = parent;\n    this.base = base !== null && base !== void 0 ? base : this;\n  }\n  separatedFrom(other) {\n    var _a, _b;\n    if (this.base === other.base && this !== other) {\n      return true;\n    }\n    if (other.parent && this.separatedFrom(other.parent)) {\n      return true;\n    }\n    return (_b = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.separatedFrom(other)) !== null && _b !== void 0 ? _b : false;\n  }\n  child() {\n    return new BranchID(this, null);\n  }\n  sibling() {\n    return new BranchID(this.parent, this.base);\n  }\n}\nclass GroupSpecifiersAsES2025 {\n  constructor() {\n    this.branchID = new BranchID(null, null);\n    this.groupNames = new Map();\n  }\n  clear() {\n    this.branchID = new BranchID(null, null);\n    this.groupNames.clear();\n  }\n  isEmpty() {\n    return !this.groupNames.size;\n  }\n  enterDisjunction() {\n    this.branchID = this.branchID.child();\n  }\n  enterAlternative(index) {\n    if (index === 0) {\n      return;\n    }\n    this.branchID = this.branchID.sibling();\n  }\n  leaveDisjunction() {\n    this.branchID = this.branchID.parent;\n  }\n  hasInPattern(name) {\n    return this.groupNames.has(name);\n  }\n  hasInScope(name) {\n    const branches = this.groupNames.get(name);\n    if (!branches) {\n      return false;\n    }\n    for (const branch of branches) {\n      if (!branch.separatedFrom(this.branchID)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  addToScope(name) {\n    const branches = this.groupNames.get(name);\n    if (branches) {\n      branches.push(this.branchID);\n      return;\n    }\n    this.groupNames.set(name, [this.branchID]);\n  }\n}\nconst legacyImpl = {\n  at(s, end, i) {\n    return i < end ? s.charCodeAt(i) : -1;\n  },\n  width(c) {\n    return 1;\n  }\n};\nconst unicodeImpl = {\n  at(s, end, i) {\n    return i < end ? s.codePointAt(i) : -1;\n  },\n  width(c) {\n    return c > 0xffff ? 2 : 1;\n  }\n};\nclass Reader {\n  constructor() {\n    this._impl = legacyImpl;\n    this._s = \"\";\n    this._i = 0;\n    this._end = 0;\n    this._cp1 = -1;\n    this._w1 = 1;\n    this._cp2 = -1;\n    this._w2 = 1;\n    this._cp3 = -1;\n    this._w3 = 1;\n    this._cp4 = -1;\n  }\n  get source() {\n    return this._s;\n  }\n  get index() {\n    return this._i;\n  }\n  get currentCodePoint() {\n    return this._cp1;\n  }\n  get nextCodePoint() {\n    return this._cp2;\n  }\n  get nextCodePoint2() {\n    return this._cp3;\n  }\n  get nextCodePoint3() {\n    return this._cp4;\n  }\n  reset(source, start, end, uFlag) {\n    this._impl = uFlag ? unicodeImpl : legacyImpl;\n    this._s = source;\n    this._end = end;\n    this.rewind(start);\n  }\n  rewind(index) {\n    const impl = this._impl;\n    this._i = index;\n    this._cp1 = impl.at(this._s, this._end, index);\n    this._w1 = impl.width(this._cp1);\n    this._cp2 = impl.at(this._s, this._end, index + this._w1);\n    this._w2 = impl.width(this._cp2);\n    this._cp3 = impl.at(this._s, this._end, index + this._w1 + this._w2);\n    this._w3 = impl.width(this._cp3);\n    this._cp4 = impl.at(this._s, this._end, index + this._w1 + this._w2 + this._w3);\n  }\n  advance() {\n    if (this._cp1 !== -1) {\n      const impl = this._impl;\n      this._i += this._w1;\n      this._cp1 = this._cp2;\n      this._w1 = this._w2;\n      this._cp2 = this._cp3;\n      this._w2 = impl.width(this._cp2);\n      this._cp3 = this._cp4;\n      this._w3 = impl.width(this._cp3);\n      this._cp4 = impl.at(this._s, this._end, this._i + this._w1 + this._w2 + this._w3);\n    }\n  }\n  eat(cp) {\n    if (this._cp1 === cp) {\n      this.advance();\n      return true;\n    }\n    return false;\n  }\n  eat2(cp1, cp2) {\n    if (this._cp1 === cp1 && this._cp2 === cp2) {\n      this.advance();\n      this.advance();\n      return true;\n    }\n    return false;\n  }\n  eat3(cp1, cp2, cp3) {\n    if (this._cp1 === cp1 && this._cp2 === cp2 && this._cp3 === cp3) {\n      this.advance();\n      this.advance();\n      this.advance();\n      return true;\n    }\n    return false;\n  }\n}\nclass RegExpSyntaxError extends SyntaxError {\n  constructor(message, index) {\n    super(message);\n    this.index = index;\n  }\n}\nfunction newRegExpSyntaxError(srcCtx, flags, index, message) {\n  let source = \"\";\n  if (srcCtx.kind === \"literal\") {\n    const literal = srcCtx.source.slice(srcCtx.start, srcCtx.end);\n    if (literal) {\n      source = `: ${literal}`;\n    }\n  } else if (srcCtx.kind === \"pattern\") {\n    const pattern = srcCtx.source.slice(srcCtx.start, srcCtx.end);\n    const flagsText = `${flags.unicode ? \"u\" : \"\"}${flags.unicodeSets ? \"v\" : \"\"}`;\n    source = `: /${pattern}/${flagsText}`;\n  }\n  return new RegExpSyntaxError(`Invalid regular expression${source}: ${message}`, index);\n}\nconst SYNTAX_CHARACTER = new Set([CIRCUMFLEX_ACCENT, DOLLAR_SIGN, REVERSE_SOLIDUS, FULL_STOP, ASTERISK, PLUS_SIGN, QUESTION_MARK, LEFT_PARENTHESIS, RIGHT_PARENTHESIS, LEFT_SQUARE_BRACKET, RIGHT_SQUARE_BRACKET, LEFT_CURLY_BRACKET, RIGHT_CURLY_BRACKET, VERTICAL_LINE]);\nconst CLASS_SET_RESERVED_DOUBLE_PUNCTUATOR_CHARACTER = new Set([AMPERSAND, EXCLAMATION_MARK, NUMBER_SIGN, DOLLAR_SIGN, PERCENT_SIGN, ASTERISK, PLUS_SIGN, COMMA, FULL_STOP, COLON, SEMICOLON, LESS_THAN_SIGN, EQUALS_SIGN, GREATER_THAN_SIGN, QUESTION_MARK, COMMERCIAL_AT, CIRCUMFLEX_ACCENT, GRAVE_ACCENT, TILDE]);\nconst CLASS_SET_SYNTAX_CHARACTER = new Set([LEFT_PARENTHESIS, RIGHT_PARENTHESIS, LEFT_SQUARE_BRACKET, RIGHT_SQUARE_BRACKET, LEFT_CURLY_BRACKET, RIGHT_CURLY_BRACKET, SOLIDUS, HYPHEN_MINUS, REVERSE_SOLIDUS, VERTICAL_LINE]);\nconst CLASS_SET_RESERVED_PUNCTUATOR = new Set([AMPERSAND, HYPHEN_MINUS, EXCLAMATION_MARK, NUMBER_SIGN, PERCENT_SIGN, COMMA, COLON, SEMICOLON, LESS_THAN_SIGN, EQUALS_SIGN, GREATER_THAN_SIGN, COMMERCIAL_AT, GRAVE_ACCENT, TILDE]);\nconst FLAG_PROP_TO_CODEPOINT = {\n  global: LATIN_SMALL_LETTER_G,\n  ignoreCase: LATIN_SMALL_LETTER_I,\n  multiline: LATIN_SMALL_LETTER_M,\n  unicode: LATIN_SMALL_LETTER_U,\n  sticky: LATIN_SMALL_LETTER_Y,\n  dotAll: LATIN_SMALL_LETTER_S,\n  hasIndices: LATIN_SMALL_LETTER_D,\n  unicodeSets: LATIN_SMALL_LETTER_V\n};\nconst FLAG_CODEPOINT_TO_PROP = Object.fromEntries(Object.entries(FLAG_PROP_TO_CODEPOINT).map(([k, v]) => [v, k]));\nfunction isSyntaxCharacter(cp) {\n  return SYNTAX_CHARACTER.has(cp);\n}\nfunction isClassSetReservedDoublePunctuatorCharacter(cp) {\n  return CLASS_SET_RESERVED_DOUBLE_PUNCTUATOR_CHARACTER.has(cp);\n}\nfunction isClassSetSyntaxCharacter(cp) {\n  return CLASS_SET_SYNTAX_CHARACTER.has(cp);\n}\nfunction isClassSetReservedPunctuator(cp) {\n  return CLASS_SET_RESERVED_PUNCTUATOR.has(cp);\n}\nfunction isIdentifierStartChar(cp) {\n  return isIdStart(cp) || cp === DOLLAR_SIGN || cp === LOW_LINE;\n}\nfunction isIdentifierPartChar(cp) {\n  return isIdContinue(cp) || cp === DOLLAR_SIGN || cp === ZERO_WIDTH_NON_JOINER || cp === ZERO_WIDTH_JOINER;\n}\nfunction isUnicodePropertyNameCharacter(cp) {\n  return isLatinLetter(cp) || cp === LOW_LINE;\n}\nfunction isUnicodePropertyValueCharacter(cp) {\n  return isUnicodePropertyNameCharacter(cp) || isDecimalDigit(cp);\n}\nfunction isRegularExpressionModifier(ch) {\n  return ch === LATIN_SMALL_LETTER_I || ch === LATIN_SMALL_LETTER_M || ch === LATIN_SMALL_LETTER_S;\n}\nclass RegExpValidator {\n  constructor(options) {\n    this._reader = new Reader();\n    this._unicodeMode = false;\n    this._unicodeSetsMode = false;\n    this._nFlag = false;\n    this._lastIntValue = 0;\n    this._lastRange = {\n      min: 0,\n      max: Number.POSITIVE_INFINITY\n    };\n    this._lastStrValue = \"\";\n    this._lastAssertionIsQuantifiable = false;\n    this._numCapturingParens = 0;\n    this._backreferenceNames = new Set();\n    this._srcCtx = null;\n    this._options = options !== null && options !== void 0 ? options : {};\n    this._groupSpecifiers = this.ecmaVersion >= 2025 ? new GroupSpecifiersAsES2025() : new GroupSpecifiersAsES2018();\n  }\n  validateLiteral(source, start = 0, end = source.length) {\n    this._srcCtx = {\n      source,\n      start,\n      end,\n      kind: \"literal\"\n    };\n    this._unicodeSetsMode = this._unicodeMode = this._nFlag = false;\n    this.reset(source, start, end);\n    this.onLiteralEnter(start);\n    if (this.eat(SOLIDUS) && this.eatRegExpBody() && this.eat(SOLIDUS)) {\n      const flagStart = this.index;\n      const unicode = source.includes(\"u\", flagStart);\n      const unicodeSets = source.includes(\"v\", flagStart);\n      this.validateFlagsInternal(source, flagStart, end);\n      this.validatePatternInternal(source, start + 1, flagStart - 1, {\n        unicode,\n        unicodeSets\n      });\n    } else if (start >= end) {\n      this.raise(\"Empty\");\n    } else {\n      const c = String.fromCodePoint(this.currentCodePoint);\n      this.raise(`Unexpected character '${c}'`);\n    }\n    this.onLiteralLeave(start, end);\n  }\n  validateFlags(source, start = 0, end = source.length) {\n    this._srcCtx = {\n      source,\n      start,\n      end,\n      kind: \"flags\"\n    };\n    this.validateFlagsInternal(source, start, end);\n  }\n  validatePattern(source, start = 0, end = source.length, uFlagOrFlags = undefined) {\n    this._srcCtx = {\n      source,\n      start,\n      end,\n      kind: \"pattern\"\n    };\n    this.validatePatternInternal(source, start, end, uFlagOrFlags);\n  }\n  validatePatternInternal(source, start = 0, end = source.length, uFlagOrFlags = undefined) {\n    const mode = this._parseFlagsOptionToMode(uFlagOrFlags, end);\n    this._unicodeMode = mode.unicodeMode;\n    this._nFlag = mode.nFlag;\n    this._unicodeSetsMode = mode.unicodeSetsMode;\n    this.reset(source, start, end);\n    this.consumePattern();\n    if (!this._nFlag && this.ecmaVersion >= 2018 && !this._groupSpecifiers.isEmpty()) {\n      this._nFlag = true;\n      this.rewind(start);\n      this.consumePattern();\n    }\n  }\n  validateFlagsInternal(source, start, end) {\n    const flags = this.parseFlags(source, start, end);\n    this.onRegExpFlags(start, end, flags);\n  }\n  _parseFlagsOptionToMode(uFlagOrFlags, sourceEnd) {\n    let unicode = false;\n    let unicodeSets = false;\n    if (uFlagOrFlags && this.ecmaVersion >= 2015) {\n      if (typeof uFlagOrFlags === \"object\") {\n        unicode = Boolean(uFlagOrFlags.unicode);\n        if (this.ecmaVersion >= 2024) {\n          unicodeSets = Boolean(uFlagOrFlags.unicodeSets);\n        }\n      } else {\n        unicode = uFlagOrFlags;\n      }\n    }\n    if (unicode && unicodeSets) {\n      this.raise(\"Invalid regular expression flags\", {\n        index: sourceEnd + 1,\n        unicode,\n        unicodeSets\n      });\n    }\n    const unicodeMode = unicode || unicodeSets;\n    const nFlag = unicode && this.ecmaVersion >= 2018 || unicodeSets || Boolean(this._options.strict && this.ecmaVersion >= 2023);\n    const unicodeSetsMode = unicodeSets;\n    return {\n      unicodeMode,\n      nFlag,\n      unicodeSetsMode\n    };\n  }\n  get strict() {\n    return Boolean(this._options.strict) || this._unicodeMode;\n  }\n  get ecmaVersion() {\n    var _a;\n    return (_a = this._options.ecmaVersion) !== null && _a !== void 0 ? _a : latestEcmaVersion;\n  }\n  onLiteralEnter(start) {\n    if (this._options.onLiteralEnter) {\n      this._options.onLiteralEnter(start);\n    }\n  }\n  onLiteralLeave(start, end) {\n    if (this._options.onLiteralLeave) {\n      this._options.onLiteralLeave(start, end);\n    }\n  }\n  onRegExpFlags(start, end, flags) {\n    if (this._options.onRegExpFlags) {\n      this._options.onRegExpFlags(start, end, flags);\n    }\n    if (this._options.onFlags) {\n      this._options.onFlags(start, end, flags.global, flags.ignoreCase, flags.multiline, flags.unicode, flags.sticky, flags.dotAll, flags.hasIndices);\n    }\n  }\n  onPatternEnter(start) {\n    if (this._options.onPatternEnter) {\n      this._options.onPatternEnter(start);\n    }\n  }\n  onPatternLeave(start, end) {\n    if (this._options.onPatternLeave) {\n      this._options.onPatternLeave(start, end);\n    }\n  }\n  onDisjunctionEnter(start) {\n    if (this._options.onDisjunctionEnter) {\n      this._options.onDisjunctionEnter(start);\n    }\n  }\n  onDisjunctionLeave(start, end) {\n    if (this._options.onDisjunctionLeave) {\n      this._options.onDisjunctionLeave(start, end);\n    }\n  }\n  onAlternativeEnter(start, index) {\n    if (this._options.onAlternativeEnter) {\n      this._options.onAlternativeEnter(start, index);\n    }\n  }\n  onAlternativeLeave(start, end, index) {\n    if (this._options.onAlternativeLeave) {\n      this._options.onAlternativeLeave(start, end, index);\n    }\n  }\n  onGroupEnter(start) {\n    if (this._options.onGroupEnter) {\n      this._options.onGroupEnter(start);\n    }\n  }\n  onGroupLeave(start, end) {\n    if (this._options.onGroupLeave) {\n      this._options.onGroupLeave(start, end);\n    }\n  }\n  onModifiersEnter(start) {\n    if (this._options.onModifiersEnter) {\n      this._options.onModifiersEnter(start);\n    }\n  }\n  onModifiersLeave(start, end) {\n    if (this._options.onModifiersLeave) {\n      this._options.onModifiersLeave(start, end);\n    }\n  }\n  onAddModifiers(start, end, flags) {\n    if (this._options.onAddModifiers) {\n      this._options.onAddModifiers(start, end, flags);\n    }\n  }\n  onRemoveModifiers(start, end, flags) {\n    if (this._options.onRemoveModifiers) {\n      this._options.onRemoveModifiers(start, end, flags);\n    }\n  }\n  onCapturingGroupEnter(start, name) {\n    if (this._options.onCapturingGroupEnter) {\n      this._options.onCapturingGroupEnter(start, name);\n    }\n  }\n  onCapturingGroupLeave(start, end, name) {\n    if (this._options.onCapturingGroupLeave) {\n      this._options.onCapturingGroupLeave(start, end, name);\n    }\n  }\n  onQuantifier(start, end, min, max, greedy) {\n    if (this._options.onQuantifier) {\n      this._options.onQuantifier(start, end, min, max, greedy);\n    }\n  }\n  onLookaroundAssertionEnter(start, kind, negate) {\n    if (this._options.onLookaroundAssertionEnter) {\n      this._options.onLookaroundAssertionEnter(start, kind, negate);\n    }\n  }\n  onLookaroundAssertionLeave(start, end, kind, negate) {\n    if (this._options.onLookaroundAssertionLeave) {\n      this._options.onLookaroundAssertionLeave(start, end, kind, negate);\n    }\n  }\n  onEdgeAssertion(start, end, kind) {\n    if (this._options.onEdgeAssertion) {\n      this._options.onEdgeAssertion(start, end, kind);\n    }\n  }\n  onWordBoundaryAssertion(start, end, kind, negate) {\n    if (this._options.onWordBoundaryAssertion) {\n      this._options.onWordBoundaryAssertion(start, end, kind, negate);\n    }\n  }\n  onAnyCharacterSet(start, end, kind) {\n    if (this._options.onAnyCharacterSet) {\n      this._options.onAnyCharacterSet(start, end, kind);\n    }\n  }\n  onEscapeCharacterSet(start, end, kind, negate) {\n    if (this._options.onEscapeCharacterSet) {\n      this._options.onEscapeCharacterSet(start, end, kind, negate);\n    }\n  }\n  onUnicodePropertyCharacterSet(start, end, kind, key, value, negate, strings) {\n    if (this._options.onUnicodePropertyCharacterSet) {\n      this._options.onUnicodePropertyCharacterSet(start, end, kind, key, value, negate, strings);\n    }\n  }\n  onCharacter(start, end, value) {\n    if (this._options.onCharacter) {\n      this._options.onCharacter(start, end, value);\n    }\n  }\n  onBackreference(start, end, ref) {\n    if (this._options.onBackreference) {\n      this._options.onBackreference(start, end, ref);\n    }\n  }\n  onCharacterClassEnter(start, negate, unicodeSets) {\n    if (this._options.onCharacterClassEnter) {\n      this._options.onCharacterClassEnter(start, negate, unicodeSets);\n    }\n  }\n  onCharacterClassLeave(start, end, negate) {\n    if (this._options.onCharacterClassLeave) {\n      this._options.onCharacterClassLeave(start, end, negate);\n    }\n  }\n  onCharacterClassRange(start, end, min, max) {\n    if (this._options.onCharacterClassRange) {\n      this._options.onCharacterClassRange(start, end, min, max);\n    }\n  }\n  onClassIntersection(start, end) {\n    if (this._options.onClassIntersection) {\n      this._options.onClassIntersection(start, end);\n    }\n  }\n  onClassSubtraction(start, end) {\n    if (this._options.onClassSubtraction) {\n      this._options.onClassSubtraction(start, end);\n    }\n  }\n  onClassStringDisjunctionEnter(start) {\n    if (this._options.onClassStringDisjunctionEnter) {\n      this._options.onClassStringDisjunctionEnter(start);\n    }\n  }\n  onClassStringDisjunctionLeave(start, end) {\n    if (this._options.onClassStringDisjunctionLeave) {\n      this._options.onClassStringDisjunctionLeave(start, end);\n    }\n  }\n  onStringAlternativeEnter(start, index) {\n    if (this._options.onStringAlternativeEnter) {\n      this._options.onStringAlternativeEnter(start, index);\n    }\n  }\n  onStringAlternativeLeave(start, end, index) {\n    if (this._options.onStringAlternativeLeave) {\n      this._options.onStringAlternativeLeave(start, end, index);\n    }\n  }\n  get index() {\n    return this._reader.index;\n  }\n  get currentCodePoint() {\n    return this._reader.currentCodePoint;\n  }\n  get nextCodePoint() {\n    return this._reader.nextCodePoint;\n  }\n  get nextCodePoint2() {\n    return this._reader.nextCodePoint2;\n  }\n  get nextCodePoint3() {\n    return this._reader.nextCodePoint3;\n  }\n  reset(source, start, end) {\n    this._reader.reset(source, start, end, this._unicodeMode);\n  }\n  rewind(index) {\n    this._reader.rewind(index);\n  }\n  advance() {\n    this._reader.advance();\n  }\n  eat(cp) {\n    return this._reader.eat(cp);\n  }\n  eat2(cp1, cp2) {\n    return this._reader.eat2(cp1, cp2);\n  }\n  eat3(cp1, cp2, cp3) {\n    return this._reader.eat3(cp1, cp2, cp3);\n  }\n  raise(message, context) {\n    var _a, _b, _c;\n    throw newRegExpSyntaxError(this._srcCtx, {\n      unicode: (_a = context === null || context === void 0 ? void 0 : context.unicode) !== null && _a !== void 0 ? _a : this._unicodeMode && !this._unicodeSetsMode,\n      unicodeSets: (_b = context === null || context === void 0 ? void 0 : context.unicodeSets) !== null && _b !== void 0 ? _b : this._unicodeSetsMode\n    }, (_c = context === null || context === void 0 ? void 0 : context.index) !== null && _c !== void 0 ? _c : this.index, message);\n  }\n  eatRegExpBody() {\n    const start = this.index;\n    let inClass = false;\n    let escaped = false;\n    for (;;) {\n      const cp = this.currentCodePoint;\n      if (cp === -1 || isLineTerminator(cp)) {\n        const kind = inClass ? \"character class\" : \"regular expression\";\n        this.raise(`Unterminated ${kind}`);\n      }\n      if (escaped) {\n        escaped = false;\n      } else if (cp === REVERSE_SOLIDUS) {\n        escaped = true;\n      } else if (cp === LEFT_SQUARE_BRACKET) {\n        inClass = true;\n      } else if (cp === RIGHT_SQUARE_BRACKET) {\n        inClass = false;\n      } else if (cp === SOLIDUS && !inClass || cp === ASTERISK && this.index === start) {\n        break;\n      }\n      this.advance();\n    }\n    return this.index !== start;\n  }\n  consumePattern() {\n    const start = this.index;\n    this._numCapturingParens = this.countCapturingParens();\n    this._groupSpecifiers.clear();\n    this._backreferenceNames.clear();\n    this.onPatternEnter(start);\n    this.consumeDisjunction();\n    const cp = this.currentCodePoint;\n    if (this.currentCodePoint !== -1) {\n      if (cp === RIGHT_PARENTHESIS) {\n        this.raise(\"Unmatched ')'\");\n      }\n      if (cp === REVERSE_SOLIDUS) {\n        this.raise(\"\\\\ at end of pattern\");\n      }\n      if (cp === RIGHT_SQUARE_BRACKET || cp === RIGHT_CURLY_BRACKET) {\n        this.raise(\"Lone quantifier brackets\");\n      }\n      const c = String.fromCodePoint(cp);\n      this.raise(`Unexpected character '${c}'`);\n    }\n    for (const name of this._backreferenceNames) {\n      if (!this._groupSpecifiers.hasInPattern(name)) {\n        this.raise(\"Invalid named capture referenced\");\n      }\n    }\n    this.onPatternLeave(start, this.index);\n  }\n  countCapturingParens() {\n    const start = this.index;\n    let inClass = false;\n    let escaped = false;\n    let count = 0;\n    let cp = 0;\n    while ((cp = this.currentCodePoint) !== -1) {\n      if (escaped) {\n        escaped = false;\n      } else if (cp === REVERSE_SOLIDUS) {\n        escaped = true;\n      } else if (cp === LEFT_SQUARE_BRACKET) {\n        inClass = true;\n      } else if (cp === RIGHT_SQUARE_BRACKET) {\n        inClass = false;\n      } else if (cp === LEFT_PARENTHESIS && !inClass && (this.nextCodePoint !== QUESTION_MARK || this.nextCodePoint2 === LESS_THAN_SIGN && this.nextCodePoint3 !== EQUALS_SIGN && this.nextCodePoint3 !== EXCLAMATION_MARK)) {\n        count += 1;\n      }\n      this.advance();\n    }\n    this.rewind(start);\n    return count;\n  }\n  consumeDisjunction() {\n    const start = this.index;\n    let i = 0;\n    this._groupSpecifiers.enterDisjunction();\n    this.onDisjunctionEnter(start);\n    do {\n      this.consumeAlternative(i++);\n    } while (this.eat(VERTICAL_LINE));\n    if (this.consumeQuantifier(true)) {\n      this.raise(\"Nothing to repeat\");\n    }\n    if (this.eat(LEFT_CURLY_BRACKET)) {\n      this.raise(\"Lone quantifier brackets\");\n    }\n    this.onDisjunctionLeave(start, this.index);\n    this._groupSpecifiers.leaveDisjunction();\n  }\n  consumeAlternative(i) {\n    const start = this.index;\n    this._groupSpecifiers.enterAlternative(i);\n    this.onAlternativeEnter(start, i);\n    while (this.currentCodePoint !== -1 && this.consumeTerm()) {}\n    this.onAlternativeLeave(start, this.index, i);\n  }\n  consumeTerm() {\n    if (this._unicodeMode || this.strict) {\n      return this.consumeAssertion() || this.consumeAtom() && this.consumeOptionalQuantifier();\n    }\n    return this.consumeAssertion() && (!this._lastAssertionIsQuantifiable || this.consumeOptionalQuantifier()) || this.consumeExtendedAtom() && this.consumeOptionalQuantifier();\n  }\n  consumeOptionalQuantifier() {\n    this.consumeQuantifier();\n    return true;\n  }\n  consumeAssertion() {\n    const start = this.index;\n    this._lastAssertionIsQuantifiable = false;\n    if (this.eat(CIRCUMFLEX_ACCENT)) {\n      this.onEdgeAssertion(start, this.index, \"start\");\n      return true;\n    }\n    if (this.eat(DOLLAR_SIGN)) {\n      this.onEdgeAssertion(start, this.index, \"end\");\n      return true;\n    }\n    if (this.eat2(REVERSE_SOLIDUS, LATIN_CAPITAL_LETTER_B)) {\n      this.onWordBoundaryAssertion(start, this.index, \"word\", true);\n      return true;\n    }\n    if (this.eat2(REVERSE_SOLIDUS, LATIN_SMALL_LETTER_B)) {\n      this.onWordBoundaryAssertion(start, this.index, \"word\", false);\n      return true;\n    }\n    if (this.eat2(LEFT_PARENTHESIS, QUESTION_MARK)) {\n      const lookbehind = this.ecmaVersion >= 2018 && this.eat(LESS_THAN_SIGN);\n      let negate = false;\n      if (this.eat(EQUALS_SIGN) || (negate = this.eat(EXCLAMATION_MARK))) {\n        const kind = lookbehind ? \"lookbehind\" : \"lookahead\";\n        this.onLookaroundAssertionEnter(start, kind, negate);\n        this.consumeDisjunction();\n        if (!this.eat(RIGHT_PARENTHESIS)) {\n          this.raise(\"Unterminated group\");\n        }\n        this._lastAssertionIsQuantifiable = !lookbehind && !this.strict;\n        this.onLookaroundAssertionLeave(start, this.index, kind, negate);\n        return true;\n      }\n      this.rewind(start);\n    }\n    return false;\n  }\n  consumeQuantifier(noConsume = false) {\n    const start = this.index;\n    let min = 0;\n    let max = 0;\n    let greedy = false;\n    if (this.eat(ASTERISK)) {\n      min = 0;\n      max = Number.POSITIVE_INFINITY;\n    } else if (this.eat(PLUS_SIGN)) {\n      min = 1;\n      max = Number.POSITIVE_INFINITY;\n    } else if (this.eat(QUESTION_MARK)) {\n      min = 0;\n      max = 1;\n    } else if (this.eatBracedQuantifier(noConsume)) {\n      ({\n        min,\n        max\n      } = this._lastRange);\n    } else {\n      return false;\n    }\n    greedy = !this.eat(QUESTION_MARK);\n    if (!noConsume) {\n      this.onQuantifier(start, this.index, min, max, greedy);\n    }\n    return true;\n  }\n  eatBracedQuantifier(noError) {\n    const start = this.index;\n    if (this.eat(LEFT_CURLY_BRACKET)) {\n      if (this.eatDecimalDigits()) {\n        const min = this._lastIntValue;\n        let max = min;\n        if (this.eat(COMMA)) {\n          max = this.eatDecimalDigits() ? this._lastIntValue : Number.POSITIVE_INFINITY;\n        }\n        if (this.eat(RIGHT_CURLY_BRACKET)) {\n          if (!noError && max < min) {\n            this.raise(\"numbers out of order in {} quantifier\");\n          }\n          this._lastRange = {\n            min,\n            max\n          };\n          return true;\n        }\n      }\n      if (!noError && (this._unicodeMode || this.strict)) {\n        this.raise(\"Incomplete quantifier\");\n      }\n      this.rewind(start);\n    }\n    return false;\n  }\n  consumeAtom() {\n    return this.consumePatternCharacter() || this.consumeDot() || this.consumeReverseSolidusAtomEscape() || Boolean(this.consumeCharacterClass()) || this.consumeCapturingGroup() || this.consumeUncapturingGroup();\n  }\n  consumeDot() {\n    if (this.eat(FULL_STOP)) {\n      this.onAnyCharacterSet(this.index - 1, this.index, \"any\");\n      return true;\n    }\n    return false;\n  }\n  consumeReverseSolidusAtomEscape() {\n    const start = this.index;\n    if (this.eat(REVERSE_SOLIDUS)) {\n      if (this.consumeAtomEscape()) {\n        return true;\n      }\n      this.rewind(start);\n    }\n    return false;\n  }\n  consumeUncapturingGroup() {\n    const start = this.index;\n    if (this.eat2(LEFT_PARENTHESIS, QUESTION_MARK)) {\n      this.onGroupEnter(start);\n      if (this.ecmaVersion >= 2025) {\n        this.consumeModifiers();\n      }\n      if (!this.eat(COLON)) {\n        this.rewind(start + 1);\n        this.raise(\"Invalid group\");\n      }\n      this.consumeDisjunction();\n      if (!this.eat(RIGHT_PARENTHESIS)) {\n        this.raise(\"Unterminated group\");\n      }\n      this.onGroupLeave(start, this.index);\n      return true;\n    }\n    return false;\n  }\n  consumeModifiers() {\n    const start = this.index;\n    const hasAddModifiers = this.eatModifiers();\n    const addModifiersEnd = this.index;\n    const hasHyphen = this.eat(HYPHEN_MINUS);\n    if (!hasAddModifiers && !hasHyphen) {\n      return false;\n    }\n    this.onModifiersEnter(start);\n    const addModifiers = this.parseModifiers(start, addModifiersEnd);\n    this.onAddModifiers(start, addModifiersEnd, addModifiers);\n    if (hasHyphen) {\n      const modifiersStart = this.index;\n      if (!this.eatModifiers() && !hasAddModifiers && this.currentCodePoint === COLON) {\n        this.raise(\"Invalid empty flags\");\n      }\n      const modifiers = this.parseModifiers(modifiersStart, this.index);\n      for (const [flagName] of Object.entries(modifiers).filter(([, enable]) => enable)) {\n        if (addModifiers[flagName]) {\n          this.raise(`Duplicated flag '${String.fromCodePoint(FLAG_PROP_TO_CODEPOINT[flagName])}'`);\n        }\n      }\n      this.onRemoveModifiers(modifiersStart, this.index, modifiers);\n    }\n    this.onModifiersLeave(start, this.index);\n    return true;\n  }\n  consumeCapturingGroup() {\n    const start = this.index;\n    if (this.eat(LEFT_PARENTHESIS)) {\n      let name = null;\n      if (this.ecmaVersion >= 2018) {\n        if (this.consumeGroupSpecifier()) {\n          name = this._lastStrValue;\n        } else if (this.currentCodePoint === QUESTION_MARK) {\n          this.rewind(start);\n          return false;\n        }\n      } else if (this.currentCodePoint === QUESTION_MARK) {\n        this.rewind(start);\n        return false;\n      }\n      this.onCapturingGroupEnter(start, name);\n      this.consumeDisjunction();\n      if (!this.eat(RIGHT_PARENTHESIS)) {\n        this.raise(\"Unterminated group\");\n      }\n      this.onCapturingGroupLeave(start, this.index, name);\n      return true;\n    }\n    return false;\n  }\n  consumeExtendedAtom() {\n    return this.consumeDot() || this.consumeReverseSolidusAtomEscape() || this.consumeReverseSolidusFollowedByC() || Boolean(this.consumeCharacterClass()) || this.consumeCapturingGroup() || this.consumeUncapturingGroup() || this.consumeInvalidBracedQuantifier() || this.consumeExtendedPatternCharacter();\n  }\n  consumeReverseSolidusFollowedByC() {\n    const start = this.index;\n    if (this.currentCodePoint === REVERSE_SOLIDUS && this.nextCodePoint === LATIN_SMALL_LETTER_C) {\n      this._lastIntValue = this.currentCodePoint;\n      this.advance();\n      this.onCharacter(start, this.index, REVERSE_SOLIDUS);\n      return true;\n    }\n    return false;\n  }\n  consumeInvalidBracedQuantifier() {\n    if (this.eatBracedQuantifier(true)) {\n      this.raise(\"Nothing to repeat\");\n    }\n    return false;\n  }\n  consumePatternCharacter() {\n    const start = this.index;\n    const cp = this.currentCodePoint;\n    if (cp !== -1 && !isSyntaxCharacter(cp)) {\n      this.advance();\n      this.onCharacter(start, this.index, cp);\n      return true;\n    }\n    return false;\n  }\n  consumeExtendedPatternCharacter() {\n    const start = this.index;\n    const cp = this.currentCodePoint;\n    if (cp !== -1 && cp !== CIRCUMFLEX_ACCENT && cp !== DOLLAR_SIGN && cp !== REVERSE_SOLIDUS && cp !== FULL_STOP && cp !== ASTERISK && cp !== PLUS_SIGN && cp !== QUESTION_MARK && cp !== LEFT_PARENTHESIS && cp !== RIGHT_PARENTHESIS && cp !== LEFT_SQUARE_BRACKET && cp !== VERTICAL_LINE) {\n      this.advance();\n      this.onCharacter(start, this.index, cp);\n      return true;\n    }\n    return false;\n  }\n  consumeGroupSpecifier() {\n    const start = this.index;\n    if (this.eat(QUESTION_MARK)) {\n      if (this.eatGroupName()) {\n        if (!this._groupSpecifiers.hasInScope(this._lastStrValue)) {\n          this._groupSpecifiers.addToScope(this._lastStrValue);\n          return true;\n        }\n        this.raise(\"Duplicate capture group name\");\n      }\n      this.rewind(start);\n    }\n    return false;\n  }\n  consumeAtomEscape() {\n    if (this.consumeBackreference() || this.consumeCharacterClassEscape() || this.consumeCharacterEscape() || this._nFlag && this.consumeKGroupName()) {\n      return true;\n    }\n    if (this.strict || this._unicodeMode) {\n      this.raise(\"Invalid escape\");\n    }\n    return false;\n  }\n  consumeBackreference() {\n    const start = this.index;\n    if (this.eatDecimalEscape()) {\n      const n = this._lastIntValue;\n      if (n <= this._numCapturingParens) {\n        this.onBackreference(start - 1, this.index, n);\n        return true;\n      }\n      if (this.strict || this._unicodeMode) {\n        this.raise(\"Invalid escape\");\n      }\n      this.rewind(start);\n    }\n    return false;\n  }\n  consumeCharacterClassEscape() {\n    var _a;\n    const start = this.index;\n    if (this.eat(LATIN_SMALL_LETTER_D)) {\n      this._lastIntValue = -1;\n      this.onEscapeCharacterSet(start - 1, this.index, \"digit\", false);\n      return {};\n    }\n    if (this.eat(LATIN_CAPITAL_LETTER_D)) {\n      this._lastIntValue = -1;\n      this.onEscapeCharacterSet(start - 1, this.index, \"digit\", true);\n      return {};\n    }\n    if (this.eat(LATIN_SMALL_LETTER_S)) {\n      this._lastIntValue = -1;\n      this.onEscapeCharacterSet(start - 1, this.index, \"space\", false);\n      return {};\n    }\n    if (this.eat(LATIN_CAPITAL_LETTER_S)) {\n      this._lastIntValue = -1;\n      this.onEscapeCharacterSet(start - 1, this.index, \"space\", true);\n      return {};\n    }\n    if (this.eat(LATIN_SMALL_LETTER_W)) {\n      this._lastIntValue = -1;\n      this.onEscapeCharacterSet(start - 1, this.index, \"word\", false);\n      return {};\n    }\n    if (this.eat(LATIN_CAPITAL_LETTER_W)) {\n      this._lastIntValue = -1;\n      this.onEscapeCharacterSet(start - 1, this.index, \"word\", true);\n      return {};\n    }\n    let negate = false;\n    if (this._unicodeMode && this.ecmaVersion >= 2018 && (this.eat(LATIN_SMALL_LETTER_P) || (negate = this.eat(LATIN_CAPITAL_LETTER_P)))) {\n      this._lastIntValue = -1;\n      let result = null;\n      if (this.eat(LEFT_CURLY_BRACKET) && (result = this.eatUnicodePropertyValueExpression()) && this.eat(RIGHT_CURLY_BRACKET)) {\n        if (negate && result.strings) {\n          this.raise(\"Invalid property name\");\n        }\n        this.onUnicodePropertyCharacterSet(start - 1, this.index, \"property\", result.key, result.value, negate, (_a = result.strings) !== null && _a !== void 0 ? _a : false);\n        return {\n          mayContainStrings: result.strings\n        };\n      }\n      this.raise(\"Invalid property name\");\n    }\n    return null;\n  }\n  consumeCharacterEscape() {\n    const start = this.index;\n    if (this.eatControlEscape() || this.eatCControlLetter() || this.eatZero() || this.eatHexEscapeSequence() || this.eatRegExpUnicodeEscapeSequence() || !this.strict && !this._unicodeMode && this.eatLegacyOctalEscapeSequence() || this.eatIdentityEscape()) {\n      this.onCharacter(start - 1, this.index, this._lastIntValue);\n      return true;\n    }\n    return false;\n  }\n  consumeKGroupName() {\n    const start = this.index;\n    if (this.eat(LATIN_SMALL_LETTER_K)) {\n      if (this.eatGroupName()) {\n        const groupName = this._lastStrValue;\n        this._backreferenceNames.add(groupName);\n        this.onBackreference(start - 1, this.index, groupName);\n        return true;\n      }\n      this.raise(\"Invalid named reference\");\n    }\n    return false;\n  }\n  consumeCharacterClass() {\n    const start = this.index;\n    if (this.eat(LEFT_SQUARE_BRACKET)) {\n      const negate = this.eat(CIRCUMFLEX_ACCENT);\n      this.onCharacterClassEnter(start, negate, this._unicodeSetsMode);\n      const result = this.consumeClassContents();\n      if (!this.eat(RIGHT_SQUARE_BRACKET)) {\n        if (this.currentCodePoint === -1) {\n          this.raise(\"Unterminated character class\");\n        }\n        this.raise(\"Invalid character in character class\");\n      }\n      if (negate && result.mayContainStrings) {\n        this.raise(\"Negated character class may contain strings\");\n      }\n      this.onCharacterClassLeave(start, this.index, negate);\n      return result;\n    }\n    return null;\n  }\n  consumeClassContents() {\n    if (this._unicodeSetsMode) {\n      if (this.currentCodePoint === RIGHT_SQUARE_BRACKET) {\n        return {};\n      }\n      const result = this.consumeClassSetExpression();\n      return result;\n    }\n    const strict = this.strict || this._unicodeMode;\n    for (;;) {\n      const rangeStart = this.index;\n      if (!this.consumeClassAtom()) {\n        break;\n      }\n      const min = this._lastIntValue;\n      if (!this.eat(HYPHEN_MINUS)) {\n        continue;\n      }\n      this.onCharacter(this.index - 1, this.index, HYPHEN_MINUS);\n      if (!this.consumeClassAtom()) {\n        break;\n      }\n      const max = this._lastIntValue;\n      if (min === -1 || max === -1) {\n        if (strict) {\n          this.raise(\"Invalid character class\");\n        }\n        continue;\n      }\n      if (min > max) {\n        this.raise(\"Range out of order in character class\");\n      }\n      this.onCharacterClassRange(rangeStart, this.index, min, max);\n    }\n    return {};\n  }\n  consumeClassAtom() {\n    const start = this.index;\n    const cp = this.currentCodePoint;\n    if (cp !== -1 && cp !== REVERSE_SOLIDUS && cp !== RIGHT_SQUARE_BRACKET) {\n      this.advance();\n      this._lastIntValue = cp;\n      this.onCharacter(start, this.index, this._lastIntValue);\n      return true;\n    }\n    if (this.eat(REVERSE_SOLIDUS)) {\n      if (this.consumeClassEscape()) {\n        return true;\n      }\n      if (!this.strict && this.currentCodePoint === LATIN_SMALL_LETTER_C) {\n        this._lastIntValue = REVERSE_SOLIDUS;\n        this.onCharacter(start, this.index, this._lastIntValue);\n        return true;\n      }\n      if (this.strict || this._unicodeMode) {\n        this.raise(\"Invalid escape\");\n      }\n      this.rewind(start);\n    }\n    return false;\n  }\n  consumeClassEscape() {\n    const start = this.index;\n    if (this.eat(LATIN_SMALL_LETTER_B)) {\n      this._lastIntValue = BACKSPACE;\n      this.onCharacter(start - 1, this.index, this._lastIntValue);\n      return true;\n    }\n    if (this._unicodeMode && this.eat(HYPHEN_MINUS)) {\n      this._lastIntValue = HYPHEN_MINUS;\n      this.onCharacter(start - 1, this.index, this._lastIntValue);\n      return true;\n    }\n    let cp = 0;\n    if (!this.strict && !this._unicodeMode && this.currentCodePoint === LATIN_SMALL_LETTER_C && (isDecimalDigit(cp = this.nextCodePoint) || cp === LOW_LINE)) {\n      this.advance();\n      this.advance();\n      this._lastIntValue = cp % 0x20;\n      this.onCharacter(start - 1, this.index, this._lastIntValue);\n      return true;\n    }\n    return Boolean(this.consumeCharacterClassEscape()) || this.consumeCharacterEscape();\n  }\n  consumeClassSetExpression() {\n    const start = this.index;\n    let mayContainStrings = false;\n    let result = null;\n    if (this.consumeClassSetCharacter()) {\n      if (this.consumeClassSetRangeFromOperator(start)) {\n        this.consumeClassUnionRight({});\n        return {};\n      }\n      mayContainStrings = false;\n    } else if (result = this.consumeClassSetOperand()) {\n      mayContainStrings = result.mayContainStrings;\n    } else {\n      const cp = this.currentCodePoint;\n      if (cp === REVERSE_SOLIDUS) {\n        this.advance();\n        this.raise(\"Invalid escape\");\n      }\n      if (cp === this.nextCodePoint && isClassSetReservedDoublePunctuatorCharacter(cp)) {\n        this.raise(\"Invalid set operation in character class\");\n      }\n      this.raise(\"Invalid character in character class\");\n    }\n    if (this.eat2(AMPERSAND, AMPERSAND)) {\n      while (this.currentCodePoint !== AMPERSAND && (result = this.consumeClassSetOperand())) {\n        this.onClassIntersection(start, this.index);\n        if (!result.mayContainStrings) {\n          mayContainStrings = false;\n        }\n        if (this.eat2(AMPERSAND, AMPERSAND)) {\n          continue;\n        }\n        return {\n          mayContainStrings\n        };\n      }\n      this.raise(\"Invalid character in character class\");\n    }\n    if (this.eat2(HYPHEN_MINUS, HYPHEN_MINUS)) {\n      while (this.consumeClassSetOperand()) {\n        this.onClassSubtraction(start, this.index);\n        if (this.eat2(HYPHEN_MINUS, HYPHEN_MINUS)) {\n          continue;\n        }\n        return {\n          mayContainStrings\n        };\n      }\n      this.raise(\"Invalid character in character class\");\n    }\n    return this.consumeClassUnionRight({\n      mayContainStrings\n    });\n  }\n  consumeClassUnionRight(leftResult) {\n    let mayContainStrings = leftResult.mayContainStrings;\n    for (;;) {\n      const start = this.index;\n      if (this.consumeClassSetCharacter()) {\n        this.consumeClassSetRangeFromOperator(start);\n        continue;\n      }\n      const result = this.consumeClassSetOperand();\n      if (result) {\n        if (result.mayContainStrings) {\n          mayContainStrings = true;\n        }\n        continue;\n      }\n      break;\n    }\n    return {\n      mayContainStrings\n    };\n  }\n  consumeClassSetRangeFromOperator(start) {\n    const currentStart = this.index;\n    const min = this._lastIntValue;\n    if (this.eat(HYPHEN_MINUS)) {\n      if (this.consumeClassSetCharacter()) {\n        const max = this._lastIntValue;\n        if (min === -1 || max === -1) {\n          this.raise(\"Invalid character class\");\n        }\n        if (min > max) {\n          this.raise(\"Range out of order in character class\");\n        }\n        this.onCharacterClassRange(start, this.index, min, max);\n        return true;\n      }\n      this.rewind(currentStart);\n    }\n    return false;\n  }\n  consumeClassSetOperand() {\n    let result = null;\n    if (result = this.consumeNestedClass()) {\n      return result;\n    }\n    if (result = this.consumeClassStringDisjunction()) {\n      return result;\n    }\n    if (this.consumeClassSetCharacter()) {\n      return {};\n    }\n    return null;\n  }\n  consumeNestedClass() {\n    const start = this.index;\n    if (this.eat(LEFT_SQUARE_BRACKET)) {\n      const negate = this.eat(CIRCUMFLEX_ACCENT);\n      this.onCharacterClassEnter(start, negate, true);\n      const result = this.consumeClassContents();\n      if (!this.eat(RIGHT_SQUARE_BRACKET)) {\n        this.raise(\"Unterminated character class\");\n      }\n      if (negate && result.mayContainStrings) {\n        this.raise(\"Negated character class may contain strings\");\n      }\n      this.onCharacterClassLeave(start, this.index, negate);\n      return result;\n    }\n    if (this.eat(REVERSE_SOLIDUS)) {\n      const result = this.consumeCharacterClassEscape();\n      if (result) {\n        return result;\n      }\n      this.rewind(start);\n    }\n    return null;\n  }\n  consumeClassStringDisjunction() {\n    const start = this.index;\n    if (this.eat3(REVERSE_SOLIDUS, LATIN_SMALL_LETTER_Q, LEFT_CURLY_BRACKET)) {\n      this.onClassStringDisjunctionEnter(start);\n      let i = 0;\n      let mayContainStrings = false;\n      do {\n        if (this.consumeClassString(i++).mayContainStrings) {\n          mayContainStrings = true;\n        }\n      } while (this.eat(VERTICAL_LINE));\n      if (this.eat(RIGHT_CURLY_BRACKET)) {\n        this.onClassStringDisjunctionLeave(start, this.index);\n        return {\n          mayContainStrings\n        };\n      }\n      this.raise(\"Unterminated class string disjunction\");\n    }\n    return null;\n  }\n  consumeClassString(i) {\n    const start = this.index;\n    let count = 0;\n    this.onStringAlternativeEnter(start, i);\n    while (this.currentCodePoint !== -1 && this.consumeClassSetCharacter()) {\n      count++;\n    }\n    this.onStringAlternativeLeave(start, this.index, i);\n    return {\n      mayContainStrings: count !== 1\n    };\n  }\n  consumeClassSetCharacter() {\n    const start = this.index;\n    const cp = this.currentCodePoint;\n    if (cp !== this.nextCodePoint || !isClassSetReservedDoublePunctuatorCharacter(cp)) {\n      if (cp !== -1 && !isClassSetSyntaxCharacter(cp)) {\n        this._lastIntValue = cp;\n        this.advance();\n        this.onCharacter(start, this.index, this._lastIntValue);\n        return true;\n      }\n    }\n    if (this.eat(REVERSE_SOLIDUS)) {\n      if (this.consumeCharacterEscape()) {\n        return true;\n      }\n      if (isClassSetReservedPunctuator(this.currentCodePoint)) {\n        this._lastIntValue = this.currentCodePoint;\n        this.advance();\n        this.onCharacter(start, this.index, this._lastIntValue);\n        return true;\n      }\n      if (this.eat(LATIN_SMALL_LETTER_B)) {\n        this._lastIntValue = BACKSPACE;\n        this.onCharacter(start, this.index, this._lastIntValue);\n        return true;\n      }\n      this.rewind(start);\n    }\n    return false;\n  }\n  eatGroupName() {\n    if (this.eat(LESS_THAN_SIGN)) {\n      if (this.eatRegExpIdentifierName() && this.eat(GREATER_THAN_SIGN)) {\n        return true;\n      }\n      this.raise(\"Invalid capture group name\");\n    }\n    return false;\n  }\n  eatRegExpIdentifierName() {\n    if (this.eatRegExpIdentifierStart()) {\n      this._lastStrValue = String.fromCodePoint(this._lastIntValue);\n      while (this.eatRegExpIdentifierPart()) {\n        this._lastStrValue += String.fromCodePoint(this._lastIntValue);\n      }\n      return true;\n    }\n    return false;\n  }\n  eatRegExpIdentifierStart() {\n    const start = this.index;\n    const forceUFlag = !this._unicodeMode && this.ecmaVersion >= 2020;\n    let cp = this.currentCodePoint;\n    this.advance();\n    if (cp === REVERSE_SOLIDUS && this.eatRegExpUnicodeEscapeSequence(forceUFlag)) {\n      cp = this._lastIntValue;\n    } else if (forceUFlag && isLeadSurrogate(cp) && isTrailSurrogate(this.currentCodePoint)) {\n      cp = combineSurrogatePair(cp, this.currentCodePoint);\n      this.advance();\n    }\n    if (isIdentifierStartChar(cp)) {\n      this._lastIntValue = cp;\n      return true;\n    }\n    if (this.index !== start) {\n      this.rewind(start);\n    }\n    return false;\n  }\n  eatRegExpIdentifierPart() {\n    const start = this.index;\n    const forceUFlag = !this._unicodeMode && this.ecmaVersion >= 2020;\n    let cp = this.currentCodePoint;\n    this.advance();\n    if (cp === REVERSE_SOLIDUS && this.eatRegExpUnicodeEscapeSequence(forceUFlag)) {\n      cp = this._lastIntValue;\n    } else if (forceUFlag && isLeadSurrogate(cp) && isTrailSurrogate(this.currentCodePoint)) {\n      cp = combineSurrogatePair(cp, this.currentCodePoint);\n      this.advance();\n    }\n    if (isIdentifierPartChar(cp)) {\n      this._lastIntValue = cp;\n      return true;\n    }\n    if (this.index !== start) {\n      this.rewind(start);\n    }\n    return false;\n  }\n  eatCControlLetter() {\n    const start = this.index;\n    if (this.eat(LATIN_SMALL_LETTER_C)) {\n      if (this.eatControlLetter()) {\n        return true;\n      }\n      this.rewind(start);\n    }\n    return false;\n  }\n  eatZero() {\n    if (this.currentCodePoint === DIGIT_ZERO && !isDecimalDigit(this.nextCodePoint)) {\n      this._lastIntValue = 0;\n      this.advance();\n      return true;\n    }\n    return false;\n  }\n  eatControlEscape() {\n    if (this.eat(LATIN_SMALL_LETTER_F)) {\n      this._lastIntValue = FORM_FEED;\n      return true;\n    }\n    if (this.eat(LATIN_SMALL_LETTER_N)) {\n      this._lastIntValue = LINE_FEED;\n      return true;\n    }\n    if (this.eat(LATIN_SMALL_LETTER_R)) {\n      this._lastIntValue = CARRIAGE_RETURN;\n      return true;\n    }\n    if (this.eat(LATIN_SMALL_LETTER_T)) {\n      this._lastIntValue = CHARACTER_TABULATION;\n      return true;\n    }\n    if (this.eat(LATIN_SMALL_LETTER_V)) {\n      this._lastIntValue = LINE_TABULATION;\n      return true;\n    }\n    return false;\n  }\n  eatControlLetter() {\n    const cp = this.currentCodePoint;\n    if (isLatinLetter(cp)) {\n      this.advance();\n      this._lastIntValue = cp % 0x20;\n      return true;\n    }\n    return false;\n  }\n  eatRegExpUnicodeEscapeSequence(forceUFlag = false) {\n    const start = this.index;\n    const uFlag = forceUFlag || this._unicodeMode;\n    if (this.eat(LATIN_SMALL_LETTER_U)) {\n      if (uFlag && this.eatRegExpUnicodeSurrogatePairEscape() || this.eatFixedHexDigits(4) || uFlag && this.eatRegExpUnicodeCodePointEscape()) {\n        return true;\n      }\n      if (this.strict || uFlag) {\n        this.raise(\"Invalid unicode escape\");\n      }\n      this.rewind(start);\n    }\n    return false;\n  }\n  eatRegExpUnicodeSurrogatePairEscape() {\n    const start = this.index;\n    if (this.eatFixedHexDigits(4)) {\n      const lead = this._lastIntValue;\n      if (isLeadSurrogate(lead) && this.eat(REVERSE_SOLIDUS) && this.eat(LATIN_SMALL_LETTER_U) && this.eatFixedHexDigits(4)) {\n        const trail = this._lastIntValue;\n        if (isTrailSurrogate(trail)) {\n          this._lastIntValue = combineSurrogatePair(lead, trail);\n          return true;\n        }\n      }\n      this.rewind(start);\n    }\n    return false;\n  }\n  eatRegExpUnicodeCodePointEscape() {\n    const start = this.index;\n    if (this.eat(LEFT_CURLY_BRACKET) && this.eatHexDigits() && this.eat(RIGHT_CURLY_BRACKET) && isValidUnicode(this._lastIntValue)) {\n      return true;\n    }\n    this.rewind(start);\n    return false;\n  }\n  eatIdentityEscape() {\n    const cp = this.currentCodePoint;\n    if (this.isValidIdentityEscape(cp)) {\n      this._lastIntValue = cp;\n      this.advance();\n      return true;\n    }\n    return false;\n  }\n  isValidIdentityEscape(cp) {\n    if (cp === -1) {\n      return false;\n    }\n    if (this._unicodeMode) {\n      return isSyntaxCharacter(cp) || cp === SOLIDUS;\n    }\n    if (this.strict) {\n      return !isIdContinue(cp);\n    }\n    if (this._nFlag) {\n      return !(cp === LATIN_SMALL_LETTER_C || cp === LATIN_SMALL_LETTER_K);\n    }\n    return cp !== LATIN_SMALL_LETTER_C;\n  }\n  eatDecimalEscape() {\n    this._lastIntValue = 0;\n    let cp = this.currentCodePoint;\n    if (cp >= DIGIT_ONE && cp <= DIGIT_NINE) {\n      do {\n        this._lastIntValue = 10 * this._lastIntValue + (cp - DIGIT_ZERO);\n        this.advance();\n      } while ((cp = this.currentCodePoint) >= DIGIT_ZERO && cp <= DIGIT_NINE);\n      return true;\n    }\n    return false;\n  }\n  eatUnicodePropertyValueExpression() {\n    const start = this.index;\n    if (this.eatUnicodePropertyName() && this.eat(EQUALS_SIGN)) {\n      const key = this._lastStrValue;\n      if (this.eatUnicodePropertyValue()) {\n        const value = this._lastStrValue;\n        if (isValidUnicodeProperty(this.ecmaVersion, key, value)) {\n          return {\n            key,\n            value: value || null\n          };\n        }\n        this.raise(\"Invalid property name\");\n      }\n    }\n    this.rewind(start);\n    if (this.eatLoneUnicodePropertyNameOrValue()) {\n      const nameOrValue = this._lastStrValue;\n      if (isValidUnicodeProperty(this.ecmaVersion, \"General_Category\", nameOrValue)) {\n        return {\n          key: \"General_Category\",\n          value: nameOrValue || null\n        };\n      }\n      if (isValidLoneUnicodeProperty(this.ecmaVersion, nameOrValue)) {\n        return {\n          key: nameOrValue,\n          value: null\n        };\n      }\n      if (this._unicodeSetsMode && isValidLoneUnicodePropertyOfString(this.ecmaVersion, nameOrValue)) {\n        return {\n          key: nameOrValue,\n          value: null,\n          strings: true\n        };\n      }\n      this.raise(\"Invalid property name\");\n    }\n    return null;\n  }\n  eatUnicodePropertyName() {\n    this._lastStrValue = \"\";\n    while (isUnicodePropertyNameCharacter(this.currentCodePoint)) {\n      this._lastStrValue += String.fromCodePoint(this.currentCodePoint);\n      this.advance();\n    }\n    return this._lastStrValue !== \"\";\n  }\n  eatUnicodePropertyValue() {\n    this._lastStrValue = \"\";\n    while (isUnicodePropertyValueCharacter(this.currentCodePoint)) {\n      this._lastStrValue += String.fromCodePoint(this.currentCodePoint);\n      this.advance();\n    }\n    return this._lastStrValue !== \"\";\n  }\n  eatLoneUnicodePropertyNameOrValue() {\n    return this.eatUnicodePropertyValue();\n  }\n  eatHexEscapeSequence() {\n    const start = this.index;\n    if (this.eat(LATIN_SMALL_LETTER_X)) {\n      if (this.eatFixedHexDigits(2)) {\n        return true;\n      }\n      if (this._unicodeMode || this.strict) {\n        this.raise(\"Invalid escape\");\n      }\n      this.rewind(start);\n    }\n    return false;\n  }\n  eatDecimalDigits() {\n    const start = this.index;\n    this._lastIntValue = 0;\n    while (isDecimalDigit(this.currentCodePoint)) {\n      this._lastIntValue = 10 * this._lastIntValue + digitToInt(this.currentCodePoint);\n      this.advance();\n    }\n    return this.index !== start;\n  }\n  eatHexDigits() {\n    const start = this.index;\n    this._lastIntValue = 0;\n    while (isHexDigit(this.currentCodePoint)) {\n      this._lastIntValue = 16 * this._lastIntValue + digitToInt(this.currentCodePoint);\n      this.advance();\n    }\n    return this.index !== start;\n  }\n  eatLegacyOctalEscapeSequence() {\n    if (this.eatOctalDigit()) {\n      const n1 = this._lastIntValue;\n      if (this.eatOctalDigit()) {\n        const n2 = this._lastIntValue;\n        if (n1 <= 3 && this.eatOctalDigit()) {\n          this._lastIntValue = n1 * 64 + n2 * 8 + this._lastIntValue;\n        } else {\n          this._lastIntValue = n1 * 8 + n2;\n        }\n      } else {\n        this._lastIntValue = n1;\n      }\n      return true;\n    }\n    return false;\n  }\n  eatOctalDigit() {\n    const cp = this.currentCodePoint;\n    if (isOctalDigit(cp)) {\n      this.advance();\n      this._lastIntValue = cp - DIGIT_ZERO;\n      return true;\n    }\n    this._lastIntValue = 0;\n    return false;\n  }\n  eatFixedHexDigits(length) {\n    const start = this.index;\n    this._lastIntValue = 0;\n    for (let i = 0; i < length; ++i) {\n      const cp = this.currentCodePoint;\n      if (!isHexDigit(cp)) {\n        this.rewind(start);\n        return false;\n      }\n      this._lastIntValue = 16 * this._lastIntValue + digitToInt(cp);\n      this.advance();\n    }\n    return true;\n  }\n  eatModifiers() {\n    let ate = false;\n    while (isRegularExpressionModifier(this.currentCodePoint)) {\n      this.advance();\n      ate = true;\n    }\n    return ate;\n  }\n  parseModifiers(start, end) {\n    const {\n      ignoreCase,\n      multiline,\n      dotAll\n    } = this.parseFlags(this._reader.source, start, end);\n    return {\n      ignoreCase,\n      multiline,\n      dotAll\n    };\n  }\n  parseFlags(source, start, end) {\n    const flags = {\n      global: false,\n      ignoreCase: false,\n      multiline: false,\n      unicode: false,\n      sticky: false,\n      dotAll: false,\n      hasIndices: false,\n      unicodeSets: false\n    };\n    const validFlags = new Set();\n    validFlags.add(LATIN_SMALL_LETTER_G);\n    validFlags.add(LATIN_SMALL_LETTER_I);\n    validFlags.add(LATIN_SMALL_LETTER_M);\n    if (this.ecmaVersion >= 2015) {\n      validFlags.add(LATIN_SMALL_LETTER_U);\n      validFlags.add(LATIN_SMALL_LETTER_Y);\n      if (this.ecmaVersion >= 2018) {\n        validFlags.add(LATIN_SMALL_LETTER_S);\n        if (this.ecmaVersion >= 2022) {\n          validFlags.add(LATIN_SMALL_LETTER_D);\n          if (this.ecmaVersion >= 2024) {\n            validFlags.add(LATIN_SMALL_LETTER_V);\n          }\n        }\n      }\n    }\n    for (let i = start; i < end; ++i) {\n      const flag = source.charCodeAt(i);\n      if (validFlags.has(flag)) {\n        const prop = FLAG_CODEPOINT_TO_PROP[flag];\n        if (flags[prop]) {\n          this.raise(`Duplicated flag '${source[i]}'`, {\n            index: start\n          });\n        }\n        flags[prop] = true;\n      } else {\n        this.raise(`Invalid flag '${source[i]}'`, {\n          index: start\n        });\n      }\n    }\n    return flags;\n  }\n}\nconst DUMMY_PATTERN = {};\nconst DUMMY_FLAGS = {};\nconst DUMMY_CAPTURING_GROUP = {};\nfunction isClassSetOperand(node) {\n  return node.type === \"Character\" || node.type === \"CharacterSet\" || node.type === \"CharacterClass\" || node.type === \"ExpressionCharacterClass\" || node.type === \"ClassStringDisjunction\";\n}\nclass RegExpParserState {\n  constructor(options) {\n    var _a;\n    this._node = DUMMY_PATTERN;\n    this._expressionBufferMap = new Map();\n    this._flags = DUMMY_FLAGS;\n    this._backreferences = [];\n    this._capturingGroups = [];\n    this.source = \"\";\n    this.strict = Boolean(options === null || options === void 0 ? void 0 : options.strict);\n    this.ecmaVersion = (_a = options === null || options === void 0 ? void 0 : options.ecmaVersion) !== null && _a !== void 0 ? _a : latestEcmaVersion;\n  }\n  get pattern() {\n    if (this._node.type !== \"Pattern\") {\n      throw new Error(\"UnknownError\");\n    }\n    return this._node;\n  }\n  get flags() {\n    if (this._flags.type !== \"Flags\") {\n      throw new Error(\"UnknownError\");\n    }\n    return this._flags;\n  }\n  onRegExpFlags(start, end, {\n    global,\n    ignoreCase,\n    multiline,\n    unicode,\n    sticky,\n    dotAll,\n    hasIndices,\n    unicodeSets\n  }) {\n    this._flags = {\n      type: \"Flags\",\n      parent: null,\n      start,\n      end,\n      raw: this.source.slice(start, end),\n      global,\n      ignoreCase,\n      multiline,\n      unicode,\n      sticky,\n      dotAll,\n      hasIndices,\n      unicodeSets\n    };\n  }\n  onPatternEnter(start) {\n    this._node = {\n      type: \"Pattern\",\n      parent: null,\n      start,\n      end: start,\n      raw: \"\",\n      alternatives: []\n    };\n    this._backreferences.length = 0;\n    this._capturingGroups.length = 0;\n  }\n  onPatternLeave(start, end) {\n    this._node.end = end;\n    this._node.raw = this.source.slice(start, end);\n    for (const reference of this._backreferences) {\n      const ref = reference.ref;\n      const groups = typeof ref === \"number\" ? [this._capturingGroups[ref - 1]] : this._capturingGroups.filter(g => g.name === ref);\n      if (groups.length === 1) {\n        const group = groups[0];\n        reference.ambiguous = false;\n        reference.resolved = group;\n      } else {\n        reference.ambiguous = true;\n        reference.resolved = groups;\n      }\n      for (const group of groups) {\n        group.references.push(reference);\n      }\n    }\n  }\n  onAlternativeEnter(start) {\n    const parent = this._node;\n    if (parent.type !== \"Assertion\" && parent.type !== \"CapturingGroup\" && parent.type !== \"Group\" && parent.type !== \"Pattern\") {\n      throw new Error(\"UnknownError\");\n    }\n    this._node = {\n      type: \"Alternative\",\n      parent,\n      start,\n      end: start,\n      raw: \"\",\n      elements: []\n    };\n    parent.alternatives.push(this._node);\n  }\n  onAlternativeLeave(start, end) {\n    const node = this._node;\n    if (node.type !== \"Alternative\") {\n      throw new Error(\"UnknownError\");\n    }\n    node.end = end;\n    node.raw = this.source.slice(start, end);\n    this._node = node.parent;\n  }\n  onGroupEnter(start) {\n    const parent = this._node;\n    if (parent.type !== \"Alternative\") {\n      throw new Error(\"UnknownError\");\n    }\n    const group = {\n      type: \"Group\",\n      parent,\n      start,\n      end: start,\n      raw: \"\",\n      modifiers: null,\n      alternatives: []\n    };\n    this._node = group;\n    parent.elements.push(this._node);\n  }\n  onGroupLeave(start, end) {\n    const node = this._node;\n    if (node.type !== \"Group\" || node.parent.type !== \"Alternative\") {\n      throw new Error(\"UnknownError\");\n    }\n    node.end = end;\n    node.raw = this.source.slice(start, end);\n    this._node = node.parent;\n  }\n  onModifiersEnter(start) {\n    const parent = this._node;\n    if (parent.type !== \"Group\") {\n      throw new Error(\"UnknownError\");\n    }\n    this._node = {\n      type: \"Modifiers\",\n      parent,\n      start,\n      end: start,\n      raw: \"\",\n      add: null,\n      remove: null\n    };\n    parent.modifiers = this._node;\n  }\n  onModifiersLeave(start, end) {\n    const node = this._node;\n    if (node.type !== \"Modifiers\" || node.parent.type !== \"Group\") {\n      throw new Error(\"UnknownError\");\n    }\n    node.end = end;\n    node.raw = this.source.slice(start, end);\n    this._node = node.parent;\n  }\n  onAddModifiers(start, end, {\n    ignoreCase,\n    multiline,\n    dotAll\n  }) {\n    const parent = this._node;\n    if (parent.type !== \"Modifiers\") {\n      throw new Error(\"UnknownError\");\n    }\n    parent.add = {\n      type: \"ModifierFlags\",\n      parent,\n      start,\n      end,\n      raw: this.source.slice(start, end),\n      ignoreCase,\n      multiline,\n      dotAll\n    };\n  }\n  onRemoveModifiers(start, end, {\n    ignoreCase,\n    multiline,\n    dotAll\n  }) {\n    const parent = this._node;\n    if (parent.type !== \"Modifiers\") {\n      throw new Error(\"UnknownError\");\n    }\n    parent.remove = {\n      type: \"ModifierFlags\",\n      parent,\n      start,\n      end,\n      raw: this.source.slice(start, end),\n      ignoreCase,\n      multiline,\n      dotAll\n    };\n  }\n  onCapturingGroupEnter(start, name) {\n    const parent = this._node;\n    if (parent.type !== \"Alternative\") {\n      throw new Error(\"UnknownError\");\n    }\n    this._node = {\n      type: \"CapturingGroup\",\n      parent,\n      start,\n      end: start,\n      raw: \"\",\n      name,\n      alternatives: [],\n      references: []\n    };\n    parent.elements.push(this._node);\n    this._capturingGroups.push(this._node);\n  }\n  onCapturingGroupLeave(start, end) {\n    const node = this._node;\n    if (node.type !== \"CapturingGroup\" || node.parent.type !== \"Alternative\") {\n      throw new Error(\"UnknownError\");\n    }\n    node.end = end;\n    node.raw = this.source.slice(start, end);\n    this._node = node.parent;\n  }\n  onQuantifier(start, end, min, max, greedy) {\n    const parent = this._node;\n    if (parent.type !== \"Alternative\") {\n      throw new Error(\"UnknownError\");\n    }\n    const element = parent.elements.pop();\n    if (element == null || element.type === \"Quantifier\" || element.type === \"Assertion\" && element.kind !== \"lookahead\") {\n      throw new Error(\"UnknownError\");\n    }\n    const node = {\n      type: \"Quantifier\",\n      parent,\n      start: element.start,\n      end,\n      raw: this.source.slice(element.start, end),\n      min,\n      max,\n      greedy,\n      element\n    };\n    parent.elements.push(node);\n    element.parent = node;\n  }\n  onLookaroundAssertionEnter(start, kind, negate) {\n    const parent = this._node;\n    if (parent.type !== \"Alternative\") {\n      throw new Error(\"UnknownError\");\n    }\n    const node = this._node = {\n      type: \"Assertion\",\n      parent,\n      start,\n      end: start,\n      raw: \"\",\n      kind,\n      negate,\n      alternatives: []\n    };\n    parent.elements.push(node);\n  }\n  onLookaroundAssertionLeave(start, end) {\n    const node = this._node;\n    if (node.type !== \"Assertion\" || node.parent.type !== \"Alternative\") {\n      throw new Error(\"UnknownError\");\n    }\n    node.end = end;\n    node.raw = this.source.slice(start, end);\n    this._node = node.parent;\n  }\n  onEdgeAssertion(start, end, kind) {\n    const parent = this._node;\n    if (parent.type !== \"Alternative\") {\n      throw new Error(\"UnknownError\");\n    }\n    parent.elements.push({\n      type: \"Assertion\",\n      parent,\n      start,\n      end,\n      raw: this.source.slice(start, end),\n      kind\n    });\n  }\n  onWordBoundaryAssertion(start, end, kind, negate) {\n    const parent = this._node;\n    if (parent.type !== \"Alternative\") {\n      throw new Error(\"UnknownError\");\n    }\n    parent.elements.push({\n      type: \"Assertion\",\n      parent,\n      start,\n      end,\n      raw: this.source.slice(start, end),\n      kind,\n      negate\n    });\n  }\n  onAnyCharacterSet(start, end, kind) {\n    const parent = this._node;\n    if (parent.type !== \"Alternative\") {\n      throw new Error(\"UnknownError\");\n    }\n    parent.elements.push({\n      type: \"CharacterSet\",\n      parent,\n      start,\n      end,\n      raw: this.source.slice(start, end),\n      kind\n    });\n  }\n  onEscapeCharacterSet(start, end, kind, negate) {\n    const parent = this._node;\n    if (parent.type !== \"Alternative\" && parent.type !== \"CharacterClass\") {\n      throw new Error(\"UnknownError\");\n    }\n    parent.elements.push({\n      type: \"CharacterSet\",\n      parent,\n      start,\n      end,\n      raw: this.source.slice(start, end),\n      kind,\n      negate\n    });\n  }\n  onUnicodePropertyCharacterSet(start, end, kind, key, value, negate, strings) {\n    const parent = this._node;\n    if (parent.type !== \"Alternative\" && parent.type !== \"CharacterClass\") {\n      throw new Error(\"UnknownError\");\n    }\n    const base = {\n      type: \"CharacterSet\",\n      parent: null,\n      start,\n      end,\n      raw: this.source.slice(start, end),\n      kind,\n      strings: null,\n      key\n    };\n    if (strings) {\n      if (parent.type === \"CharacterClass\" && !parent.unicodeSets || negate || value !== null) {\n        throw new Error(\"UnknownError\");\n      }\n      parent.elements.push(Object.assign(Object.assign({}, base), {\n        parent,\n        strings,\n        value,\n        negate\n      }));\n    } else {\n      parent.elements.push(Object.assign(Object.assign({}, base), {\n        parent,\n        strings,\n        value,\n        negate\n      }));\n    }\n  }\n  onCharacter(start, end, value) {\n    const parent = this._node;\n    if (parent.type !== \"Alternative\" && parent.type !== \"CharacterClass\" && parent.type !== \"StringAlternative\") {\n      throw new Error(\"UnknownError\");\n    }\n    parent.elements.push({\n      type: \"Character\",\n      parent,\n      start,\n      end,\n      raw: this.source.slice(start, end),\n      value\n    });\n  }\n  onBackreference(start, end, ref) {\n    const parent = this._node;\n    if (parent.type !== \"Alternative\") {\n      throw new Error(\"UnknownError\");\n    }\n    const node = {\n      type: \"Backreference\",\n      parent,\n      start,\n      end,\n      raw: this.source.slice(start, end),\n      ref,\n      ambiguous: false,\n      resolved: DUMMY_CAPTURING_GROUP\n    };\n    parent.elements.push(node);\n    this._backreferences.push(node);\n  }\n  onCharacterClassEnter(start, negate, unicodeSets) {\n    const parent = this._node;\n    const base = {\n      type: \"CharacterClass\",\n      parent,\n      start,\n      end: start,\n      raw: \"\",\n      unicodeSets,\n      negate,\n      elements: []\n    };\n    if (parent.type === \"Alternative\") {\n      const node = Object.assign(Object.assign({}, base), {\n        parent\n      });\n      this._node = node;\n      parent.elements.push(node);\n    } else if (parent.type === \"CharacterClass\" && parent.unicodeSets && unicodeSets) {\n      const node = Object.assign(Object.assign({}, base), {\n        parent,\n        unicodeSets\n      });\n      this._node = node;\n      parent.elements.push(node);\n    } else {\n      throw new Error(\"UnknownError\");\n    }\n  }\n  onCharacterClassLeave(start, end) {\n    const node = this._node;\n    if (node.type !== \"CharacterClass\" || node.parent.type !== \"Alternative\" && node.parent.type !== \"CharacterClass\") {\n      throw new Error(\"UnknownError\");\n    }\n    const parent = node.parent;\n    node.end = end;\n    node.raw = this.source.slice(start, end);\n    this._node = parent;\n    const expression = this._expressionBufferMap.get(node);\n    if (!expression) {\n      return;\n    }\n    if (node.elements.length > 0) {\n      throw new Error(\"UnknownError\");\n    }\n    this._expressionBufferMap.delete(node);\n    const newNode = {\n      type: \"ExpressionCharacterClass\",\n      parent,\n      start: node.start,\n      end: node.end,\n      raw: node.raw,\n      negate: node.negate,\n      expression\n    };\n    expression.parent = newNode;\n    if (node !== parent.elements.pop()) {\n      throw new Error(\"UnknownError\");\n    }\n    parent.elements.push(newNode);\n  }\n  onCharacterClassRange(start, end) {\n    const parent = this._node;\n    if (parent.type !== \"CharacterClass\") {\n      throw new Error(\"UnknownError\");\n    }\n    const elements = parent.elements;\n    const max = elements.pop();\n    if (!max || max.type !== \"Character\") {\n      throw new Error(\"UnknownError\");\n    }\n    if (!parent.unicodeSets) {\n      const hyphen = elements.pop();\n      if (!hyphen || hyphen.type !== \"Character\" || hyphen.value !== HYPHEN_MINUS) {\n        throw new Error(\"UnknownError\");\n      }\n    }\n    const min = elements.pop();\n    if (!min || min.type !== \"Character\") {\n      throw new Error(\"UnknownError\");\n    }\n    const node = {\n      type: \"CharacterClassRange\",\n      parent,\n      start,\n      end,\n      raw: this.source.slice(start, end),\n      min,\n      max\n    };\n    min.parent = node;\n    max.parent = node;\n    elements.push(node);\n  }\n  onClassIntersection(start, end) {\n    var _a;\n    const parent = this._node;\n    if (parent.type !== \"CharacterClass\" || !parent.unicodeSets) {\n      throw new Error(\"UnknownError\");\n    }\n    const right = parent.elements.pop();\n    const left = (_a = this._expressionBufferMap.get(parent)) !== null && _a !== void 0 ? _a : parent.elements.pop();\n    if (!left || !right || left.type === \"ClassSubtraction\" || left.type !== \"ClassIntersection\" && !isClassSetOperand(left) || !isClassSetOperand(right)) {\n      throw new Error(\"UnknownError\");\n    }\n    const node = {\n      type: \"ClassIntersection\",\n      parent: parent,\n      start,\n      end,\n      raw: this.source.slice(start, end),\n      left,\n      right\n    };\n    left.parent = node;\n    right.parent = node;\n    this._expressionBufferMap.set(parent, node);\n  }\n  onClassSubtraction(start, end) {\n    var _a;\n    const parent = this._node;\n    if (parent.type !== \"CharacterClass\" || !parent.unicodeSets) {\n      throw new Error(\"UnknownError\");\n    }\n    const right = parent.elements.pop();\n    const left = (_a = this._expressionBufferMap.get(parent)) !== null && _a !== void 0 ? _a : parent.elements.pop();\n    if (!left || !right || left.type === \"ClassIntersection\" || left.type !== \"ClassSubtraction\" && !isClassSetOperand(left) || !isClassSetOperand(right)) {\n      throw new Error(\"UnknownError\");\n    }\n    const node = {\n      type: \"ClassSubtraction\",\n      parent: parent,\n      start,\n      end,\n      raw: this.source.slice(start, end),\n      left,\n      right\n    };\n    left.parent = node;\n    right.parent = node;\n    this._expressionBufferMap.set(parent, node);\n  }\n  onClassStringDisjunctionEnter(start) {\n    const parent = this._node;\n    if (parent.type !== \"CharacterClass\" || !parent.unicodeSets) {\n      throw new Error(\"UnknownError\");\n    }\n    this._node = {\n      type: \"ClassStringDisjunction\",\n      parent,\n      start,\n      end: start,\n      raw: \"\",\n      alternatives: []\n    };\n    parent.elements.push(this._node);\n  }\n  onClassStringDisjunctionLeave(start, end) {\n    const node = this._node;\n    if (node.type !== \"ClassStringDisjunction\" || node.parent.type !== \"CharacterClass\") {\n      throw new Error(\"UnknownError\");\n    }\n    node.end = end;\n    node.raw = this.source.slice(start, end);\n    this._node = node.parent;\n  }\n  onStringAlternativeEnter(start) {\n    const parent = this._node;\n    if (parent.type !== \"ClassStringDisjunction\") {\n      throw new Error(\"UnknownError\");\n    }\n    this._node = {\n      type: \"StringAlternative\",\n      parent,\n      start,\n      end: start,\n      raw: \"\",\n      elements: []\n    };\n    parent.alternatives.push(this._node);\n  }\n  onStringAlternativeLeave(start, end) {\n    const node = this._node;\n    if (node.type !== \"StringAlternative\") {\n      throw new Error(\"UnknownError\");\n    }\n    node.end = end;\n    node.raw = this.source.slice(start, end);\n    this._node = node.parent;\n  }\n}\nclass RegExpParser {\n  constructor(options) {\n    this._state = new RegExpParserState(options);\n    this._validator = new RegExpValidator(this._state);\n  }\n  parseLiteral(source, start = 0, end = source.length) {\n    this._state.source = source;\n    this._validator.validateLiteral(source, start, end);\n    const pattern = this._state.pattern;\n    const flags = this._state.flags;\n    const literal = {\n      type: \"RegExpLiteral\",\n      parent: null,\n      start,\n      end,\n      raw: source,\n      pattern,\n      flags\n    };\n    pattern.parent = literal;\n    flags.parent = literal;\n    return literal;\n  }\n  parseFlags(source, start = 0, end = source.length) {\n    this._state.source = source;\n    this._validator.validateFlags(source, start, end);\n    return this._state.flags;\n  }\n  parsePattern(source, start = 0, end = source.length, uFlagOrFlags = undefined) {\n    this._state.source = source;\n    this._validator.validatePattern(source, start, end, uFlagOrFlags);\n    return this._state.pattern;\n  }\n}\nclass RegExpVisitor {\n  constructor(handlers) {\n    this._handlers = handlers;\n  }\n  visit(node) {\n    switch (node.type) {\n      case \"Alternative\":\n        this.visitAlternative(node);\n        break;\n      case \"Assertion\":\n        this.visitAssertion(node);\n        break;\n      case \"Backreference\":\n        this.visitBackreference(node);\n        break;\n      case \"CapturingGroup\":\n        this.visitCapturingGroup(node);\n        break;\n      case \"Character\":\n        this.visitCharacter(node);\n        break;\n      case \"CharacterClass\":\n        this.visitCharacterClass(node);\n        break;\n      case \"CharacterClassRange\":\n        this.visitCharacterClassRange(node);\n        break;\n      case \"CharacterSet\":\n        this.visitCharacterSet(node);\n        break;\n      case \"ClassIntersection\":\n        this.visitClassIntersection(node);\n        break;\n      case \"ClassStringDisjunction\":\n        this.visitClassStringDisjunction(node);\n        break;\n      case \"ClassSubtraction\":\n        this.visitClassSubtraction(node);\n        break;\n      case \"ExpressionCharacterClass\":\n        this.visitExpressionCharacterClass(node);\n        break;\n      case \"Flags\":\n        this.visitFlags(node);\n        break;\n      case \"Group\":\n        this.visitGroup(node);\n        break;\n      case \"Modifiers\":\n        this.visitModifiers(node);\n        break;\n      case \"ModifierFlags\":\n        this.visitModifierFlags(node);\n        break;\n      case \"Pattern\":\n        this.visitPattern(node);\n        break;\n      case \"Quantifier\":\n        this.visitQuantifier(node);\n        break;\n      case \"RegExpLiteral\":\n        this.visitRegExpLiteral(node);\n        break;\n      case \"StringAlternative\":\n        this.visitStringAlternative(node);\n        break;\n      default:\n        throw new Error(`Unknown type: ${node.type}`);\n    }\n  }\n  visitAlternative(node) {\n    if (this._handlers.onAlternativeEnter) {\n      this._handlers.onAlternativeEnter(node);\n    }\n    node.elements.forEach(this.visit, this);\n    if (this._handlers.onAlternativeLeave) {\n      this._handlers.onAlternativeLeave(node);\n    }\n  }\n  visitAssertion(node) {\n    if (this._handlers.onAssertionEnter) {\n      this._handlers.onAssertionEnter(node);\n    }\n    if (node.kind === \"lookahead\" || node.kind === \"lookbehind\") {\n      node.alternatives.forEach(this.visit, this);\n    }\n    if (this._handlers.onAssertionLeave) {\n      this._handlers.onAssertionLeave(node);\n    }\n  }\n  visitBackreference(node) {\n    if (this._handlers.onBackreferenceEnter) {\n      this._handlers.onBackreferenceEnter(node);\n    }\n    if (this._handlers.onBackreferenceLeave) {\n      this._handlers.onBackreferenceLeave(node);\n    }\n  }\n  visitCapturingGroup(node) {\n    if (this._handlers.onCapturingGroupEnter) {\n      this._handlers.onCapturingGroupEnter(node);\n    }\n    node.alternatives.forEach(this.visit, this);\n    if (this._handlers.onCapturingGroupLeave) {\n      this._handlers.onCapturingGroupLeave(node);\n    }\n  }\n  visitCharacter(node) {\n    if (this._handlers.onCharacterEnter) {\n      this._handlers.onCharacterEnter(node);\n    }\n    if (this._handlers.onCharacterLeave) {\n      this._handlers.onCharacterLeave(node);\n    }\n  }\n  visitCharacterClass(node) {\n    if (this._handlers.onCharacterClassEnter) {\n      this._handlers.onCharacterClassEnter(node);\n    }\n    node.elements.forEach(this.visit, this);\n    if (this._handlers.onCharacterClassLeave) {\n      this._handlers.onCharacterClassLeave(node);\n    }\n  }\n  visitCharacterClassRange(node) {\n    if (this._handlers.onCharacterClassRangeEnter) {\n      this._handlers.onCharacterClassRangeEnter(node);\n    }\n    this.visitCharacter(node.min);\n    this.visitCharacter(node.max);\n    if (this._handlers.onCharacterClassRangeLeave) {\n      this._handlers.onCharacterClassRangeLeave(node);\n    }\n  }\n  visitCharacterSet(node) {\n    if (this._handlers.onCharacterSetEnter) {\n      this._handlers.onCharacterSetEnter(node);\n    }\n    if (this._handlers.onCharacterSetLeave) {\n      this._handlers.onCharacterSetLeave(node);\n    }\n  }\n  visitClassIntersection(node) {\n    if (this._handlers.onClassIntersectionEnter) {\n      this._handlers.onClassIntersectionEnter(node);\n    }\n    this.visit(node.left);\n    this.visit(node.right);\n    if (this._handlers.onClassIntersectionLeave) {\n      this._handlers.onClassIntersectionLeave(node);\n    }\n  }\n  visitClassStringDisjunction(node) {\n    if (this._handlers.onClassStringDisjunctionEnter) {\n      this._handlers.onClassStringDisjunctionEnter(node);\n    }\n    node.alternatives.forEach(this.visit, this);\n    if (this._handlers.onClassStringDisjunctionLeave) {\n      this._handlers.onClassStringDisjunctionLeave(node);\n    }\n  }\n  visitClassSubtraction(node) {\n    if (this._handlers.onClassSubtractionEnter) {\n      this._handlers.onClassSubtractionEnter(node);\n    }\n    this.visit(node.left);\n    this.visit(node.right);\n    if (this._handlers.onClassSubtractionLeave) {\n      this._handlers.onClassSubtractionLeave(node);\n    }\n  }\n  visitExpressionCharacterClass(node) {\n    if (this._handlers.onExpressionCharacterClassEnter) {\n      this._handlers.onExpressionCharacterClassEnter(node);\n    }\n    this.visit(node.expression);\n    if (this._handlers.onExpressionCharacterClassLeave) {\n      this._handlers.onExpressionCharacterClassLeave(node);\n    }\n  }\n  visitFlags(node) {\n    if (this._handlers.onFlagsEnter) {\n      this._handlers.onFlagsEnter(node);\n    }\n    if (this._handlers.onFlagsLeave) {\n      this._handlers.onFlagsLeave(node);\n    }\n  }\n  visitGroup(node) {\n    if (this._handlers.onGroupEnter) {\n      this._handlers.onGroupEnter(node);\n    }\n    if (node.modifiers) {\n      this.visit(node.modifiers);\n    }\n    node.alternatives.forEach(this.visit, this);\n    if (this._handlers.onGroupLeave) {\n      this._handlers.onGroupLeave(node);\n    }\n  }\n  visitModifiers(node) {\n    if (this._handlers.onModifiersEnter) {\n      this._handlers.onModifiersEnter(node);\n    }\n    if (node.add) {\n      this.visit(node.add);\n    }\n    if (node.remove) {\n      this.visit(node.remove);\n    }\n    if (this._handlers.onModifiersLeave) {\n      this._handlers.onModifiersLeave(node);\n    }\n  }\n  visitModifierFlags(node) {\n    if (this._handlers.onModifierFlagsEnter) {\n      this._handlers.onModifierFlagsEnter(node);\n    }\n    if (this._handlers.onModifierFlagsLeave) {\n      this._handlers.onModifierFlagsLeave(node);\n    }\n  }\n  visitPattern(node) {\n    if (this._handlers.onPatternEnter) {\n      this._handlers.onPatternEnter(node);\n    }\n    node.alternatives.forEach(this.visit, this);\n    if (this._handlers.onPatternLeave) {\n      this._handlers.onPatternLeave(node);\n    }\n  }\n  visitQuantifier(node) {\n    if (this._handlers.onQuantifierEnter) {\n      this._handlers.onQuantifierEnter(node);\n    }\n    this.visit(node.element);\n    if (this._handlers.onQuantifierLeave) {\n      this._handlers.onQuantifierLeave(node);\n    }\n  }\n  visitRegExpLiteral(node) {\n    if (this._handlers.onRegExpLiteralEnter) {\n      this._handlers.onRegExpLiteralEnter(node);\n    }\n    this.visitPattern(node.pattern);\n    this.visitFlags(node.flags);\n    if (this._handlers.onRegExpLiteralLeave) {\n      this._handlers.onRegExpLiteralLeave(node);\n    }\n  }\n  visitStringAlternative(node) {\n    if (this._handlers.onStringAlternativeEnter) {\n      this._handlers.onStringAlternativeEnter(node);\n    }\n    node.elements.forEach(this.visit, this);\n    if (this._handlers.onStringAlternativeLeave) {\n      this._handlers.onStringAlternativeLeave(node);\n    }\n  }\n}\nfunction parseRegExpLiteral(source, options) {\n  return new RegExpParser(options).parseLiteral(String(source));\n}\nfunction validateRegExpLiteral(source, options) {\n  new RegExpValidator(options).validateLiteral(source);\n}\nfunction visitRegExpAST(node, handlers) {\n  new RegExpVisitor(handlers).visit(node);\n}\nexports.AST = ast;\nexports.RegExpParser = RegExpParser;\nexports.RegExpSyntaxError = RegExpSyntaxError;\nexports.RegExpValidator = RegExpValidator;\nexports.parseRegExpLiteral = parseRegExpLiteral;\nexports.validateRegExpLiteral = validateRegExpLiteral;\nexports.visitRegExpAST = visitRegExpAST;","map":{"version":3,"names":["latestEcmaVersion","largeIdStartRanges","undefined","largeIdContinueRanges","isIdStart","cp","isLargeIdStart","isIdContinue","isLargeIdContinue","isInRange","initLargeIdStartRanges","initLargeIdContinueRanges","restoreRanges","ranges","l","r","length","i","min","max","data","last","split","map","s","parseInt","DataSet","constructor","raw2018","raw2019","raw2020","raw2021","raw2022","raw2023","raw2024","raw2025","_raw2018","_raw2019","_raw2020","_raw2021","_raw2022","_raw2023","_raw2024","_raw2025","es2018","_a","_set2018","Set","es2019","_set2019","es2020","_set2020","es2021","_set2021","es2022","_set2022","es2023","_set2023","es2024","_set2024","es2025","_set2025","gcNameSet","scNameSet","gcValueSets","scValueSets","binPropertySets","binPropertyOfStringsSets","isValidUnicodeProperty","version","name","value","has","isValidLoneUnicodeProperty","isValidLoneUnicodePropertyOfString","BACKSPACE","CHARACTER_TABULATION","LINE_FEED","LINE_TABULATION","FORM_FEED","CARRIAGE_RETURN","EXCLAMATION_MARK","NUMBER_SIGN","DOLLAR_SIGN","PERCENT_SIGN","AMPERSAND","LEFT_PARENTHESIS","RIGHT_PARENTHESIS","ASTERISK","PLUS_SIGN","COMMA","HYPHEN_MINUS","FULL_STOP","SOLIDUS","DIGIT_ZERO","DIGIT_ONE","DIGIT_SEVEN","DIGIT_NINE","COLON","SEMICOLON","LESS_THAN_SIGN","EQUALS_SIGN","GREATER_THAN_SIGN","QUESTION_MARK","COMMERCIAL_AT","LATIN_CAPITAL_LETTER_A","LATIN_CAPITAL_LETTER_B","LATIN_CAPITAL_LETTER_D","LATIN_CAPITAL_LETTER_F","LATIN_CAPITAL_LETTER_P","LATIN_CAPITAL_LETTER_S","LATIN_CAPITAL_LETTER_W","LATIN_CAPITAL_LETTER_Z","LOW_LINE","LATIN_SMALL_LETTER_A","LATIN_SMALL_LETTER_B","LATIN_SMALL_LETTER_C","LATIN_SMALL_LETTER_D","LATIN_SMALL_LETTER_F","LATIN_SMALL_LETTER_G","LATIN_SMALL_LETTER_I","LATIN_SMALL_LETTER_K","LATIN_SMALL_LETTER_M","LATIN_SMALL_LETTER_N","LATIN_SMALL_LETTER_P","LATIN_SMALL_LETTER_Q","LATIN_SMALL_LETTER_R","LATIN_SMALL_LETTER_S","LATIN_SMALL_LETTER_T","LATIN_SMALL_LETTER_U","LATIN_SMALL_LETTER_V","LATIN_SMALL_LETTER_W","LATIN_SMALL_LETTER_X","LATIN_SMALL_LETTER_Y","LATIN_SMALL_LETTER_Z","LEFT_SQUARE_BRACKET","REVERSE_SOLIDUS","RIGHT_SQUARE_BRACKET","CIRCUMFLEX_ACCENT","GRAVE_ACCENT","LEFT_CURLY_BRACKET","VERTICAL_LINE","RIGHT_CURLY_BRACKET","TILDE","ZERO_WIDTH_NON_JOINER","ZERO_WIDTH_JOINER","LINE_SEPARATOR","PARAGRAPH_SEPARATOR","MIN_CODE_POINT","MAX_CODE_POINT","isLatinLetter","code","isDecimalDigit","isOctalDigit","isHexDigit","isLineTerminator","isValidUnicode","digitToInt","isLeadSurrogate","isTrailSurrogate","combineSurrogatePair","lead","trail","GroupSpecifiersAsES2018","groupName","clear","isEmpty","size","hasInPattern","hasInScope","addToScope","add","enterDisjunction","enterAlternative","leaveDisjunction","BranchID","parent","base","separatedFrom","other","_b","child","sibling","GroupSpecifiersAsES2025","branchID","groupNames","Map","index","branches","get","branch","push","set","legacyImpl","at","end","charCodeAt","width","c","unicodeImpl","codePointAt","Reader","_impl","_s","_i","_end","_cp1","_w1","_cp2","_w2","_cp3","_w3","_cp4","source","currentCodePoint","nextCodePoint","nextCodePoint2","nextCodePoint3","reset","start","uFlag","rewind","impl","advance","eat","eat2","cp1","cp2","eat3","cp3","RegExpSyntaxError","SyntaxError","message","newRegExpSyntaxError","srcCtx","flags","kind","literal","slice","pattern","flagsText","unicode","unicodeSets","SYNTAX_CHARACTER","CLASS_SET_RESERVED_DOUBLE_PUNCTUATOR_CHARACTER","CLASS_SET_SYNTAX_CHARACTER","CLASS_SET_RESERVED_PUNCTUATOR","FLAG_PROP_TO_CODEPOINT","global","ignoreCase","multiline","sticky","dotAll","hasIndices","FLAG_CODEPOINT_TO_PROP","Object","fromEntries","entries","k","v","isSyntaxCharacter","isClassSetReservedDoublePunctuatorCharacter","isClassSetSyntaxCharacter","isClassSetReservedPunctuator","isIdentifierStartChar","isIdentifierPartChar","isUnicodePropertyNameCharacter","isUnicodePropertyValueCharacter","isRegularExpressionModifier","ch","RegExpValidator","options","_reader","_unicodeMode","_unicodeSetsMode","_nFlag","_lastIntValue","_lastRange","Number","POSITIVE_INFINITY","_lastStrValue","_lastAssertionIsQuantifiable","_numCapturingParens","_backreferenceNames","_srcCtx","_options","_groupSpecifiers","ecmaVersion","validateLiteral","onLiteralEnter","eatRegExpBody","flagStart","includes","validateFlagsInternal","validatePatternInternal","raise","String","fromCodePoint","onLiteralLeave","validateFlags","validatePattern","uFlagOrFlags","mode","_parseFlagsOptionToMode","unicodeMode","nFlag","unicodeSetsMode","consumePattern","parseFlags","onRegExpFlags","sourceEnd","Boolean","strict","onFlags","onPatternEnter","onPatternLeave","onDisjunctionEnter","onDisjunctionLeave","onAlternativeEnter","onAlternativeLeave","onGroupEnter","onGroupLeave","onModifiersEnter","onModifiersLeave","onAddModifiers","onRemoveModifiers","onCapturingGroupEnter","onCapturingGroupLeave","onQuantifier","greedy","onLookaroundAssertionEnter","negate","onLookaroundAssertionLeave","onEdgeAssertion","onWordBoundaryAssertion","onAnyCharacterSet","onEscapeCharacterSet","onUnicodePropertyCharacterSet","key","strings","onCharacter","onBackreference","ref","onCharacterClassEnter","onCharacterClassLeave","onCharacterClassRange","onClassIntersection","onClassSubtraction","onClassStringDisjunctionEnter","onClassStringDisjunctionLeave","onStringAlternativeEnter","onStringAlternativeLeave","context","_c","inClass","escaped","countCapturingParens","consumeDisjunction","count","consumeAlternative","consumeQuantifier","consumeTerm","consumeAssertion","consumeAtom","consumeOptionalQuantifier","consumeExtendedAtom","lookbehind","noConsume","eatBracedQuantifier","noError","eatDecimalDigits","consumePatternCharacter","consumeDot","consumeReverseSolidusAtomEscape","consumeCharacterClass","consumeCapturingGroup","consumeUncapturingGroup","consumeAtomEscape","consumeModifiers","hasAddModifiers","eatModifiers","addModifiersEnd","hasHyphen","addModifiers","parseModifiers","modifiersStart","modifiers","flagName","filter","enable","consumeGroupSpecifier","consumeReverseSolidusFollowedByC","consumeInvalidBracedQuantifier","consumeExtendedPatternCharacter","eatGroupName","consumeBackreference","consumeCharacterClassEscape","consumeCharacterEscape","consumeKGroupName","eatDecimalEscape","n","result","eatUnicodePropertyValueExpression","mayContainStrings","eatControlEscape","eatCControlLetter","eatZero","eatHexEscapeSequence","eatRegExpUnicodeEscapeSequence","eatLegacyOctalEscapeSequence","eatIdentityEscape","consumeClassContents","consumeClassSetExpression","rangeStart","consumeClassAtom","consumeClassEscape","consumeClassSetCharacter","consumeClassSetRangeFromOperator","consumeClassUnionRight","consumeClassSetOperand","leftResult","currentStart","consumeNestedClass","consumeClassStringDisjunction","consumeClassString","eatRegExpIdentifierName","eatRegExpIdentifierStart","eatRegExpIdentifierPart","forceUFlag","eatControlLetter","eatRegExpUnicodeSurrogatePairEscape","eatFixedHexDigits","eatRegExpUnicodeCodePointEscape","eatHexDigits","isValidIdentityEscape","eatUnicodePropertyName","eatUnicodePropertyValue","eatLoneUnicodePropertyNameOrValue","nameOrValue","eatOctalDigit","n1","n2","ate","validFlags","flag","prop","DUMMY_PATTERN","DUMMY_FLAGS","DUMMY_CAPTURING_GROUP","isClassSetOperand","node","type","RegExpParserState","_node","_expressionBufferMap","_flags","_backreferences","_capturingGroups","Error","raw","alternatives","reference","groups","g","group","ambiguous","resolved","references","elements","remove","element","pop","assign","expression","delete","newNode","hyphen","right","left","RegExpParser","_state","_validator","parseLiteral","parsePattern","RegExpVisitor","handlers","_handlers","visit","visitAlternative","visitAssertion","visitBackreference","visitCapturingGroup","visitCharacter","visitCharacterClass","visitCharacterClassRange","visitCharacterSet","visitClassIntersection","visitClassStringDisjunction","visitClassSubtraction","visitExpressionCharacterClass","visitFlags","visitGroup","visitModifiers","visitModifierFlags","visitPattern","visitQuantifier","visitRegExpLiteral","visitStringAlternative","forEach","onAssertionEnter","onAssertionLeave","onBackreferenceEnter","onBackreferenceLeave","onCharacterEnter","onCharacterLeave","onCharacterClassRangeEnter","onCharacterClassRangeLeave","onCharacterSetEnter","onCharacterSetLeave","onClassIntersectionEnter","onClassIntersectionLeave","onClassSubtractionEnter","onClassSubtractionLeave","onExpressionCharacterClassEnter","onExpressionCharacterClassLeave","onFlagsEnter","onFlagsLeave","onModifierFlagsEnter","onModifierFlagsLeave","onQuantifierEnter","onQuantifierLeave","onRegExpLiteralEnter","onRegExpLiteralLeave","parseRegExpLiteral","validateRegExpLiteral","visitRegExpAST"],"sources":[".temp/src/ecma-versions.ts",".temp/unicode/src/unicode/ids.ts",".temp/unicode/src/unicode/properties.ts",".temp/unicode/src/unicode/index.ts",".temp/src/group-specifiers.ts",".temp/src/reader.ts",".temp/src/regexp-syntax-error.ts",".temp/src/validator.ts",".temp/src/parser.ts",".temp/src/visitor.ts",".temp/src/index.ts"],"sourcesContent":[null,null,null,null,null,null,null,null,null,null,null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}