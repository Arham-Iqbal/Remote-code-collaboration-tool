{"ast":null,"code":"/**\n * @fileoverview Common utils for regular expressions.\n * @author Josh Goldberg\n * @author Toru Nagashima\n */\n\n\"use strict\";\n\nconst {\n  RegExpValidator\n} = require(\"@eslint-community/regexpp\");\nconst REGEXPP_LATEST_ECMA_VERSION = 2024;\n\n/**\n * Checks if the given regular expression pattern would be valid with the `u` flag.\n * @param {number} ecmaVersion ECMAScript version to parse in.\n * @param {string} pattern The regular expression pattern to verify.\n * @returns {boolean} `true` if the pattern would be valid with the `u` flag.\n * `false` if the pattern would be invalid with the `u` flag or the configured\n * ecmaVersion doesn't support the `u` flag.\n */\nfunction isValidWithUnicodeFlag(ecmaVersion, pattern) {\n  if (ecmaVersion <= 5) {\n    // ecmaVersion <= 5 doesn't support the 'u' flag\n    return false;\n  }\n  const validator = new RegExpValidator({\n    ecmaVersion: Math.min(ecmaVersion, REGEXPP_LATEST_ECMA_VERSION)\n  });\n  try {\n    validator.validatePattern(pattern, void 0, void 0, {\n      unicode: /* uFlag = */true\n    });\n  } catch {\n    return false;\n  }\n  return true;\n}\nmodule.exports = {\n  isValidWithUnicodeFlag,\n  REGEXPP_LATEST_ECMA_VERSION\n};","map":{"version":3,"names":["RegExpValidator","require","REGEXPP_LATEST_ECMA_VERSION","isValidWithUnicodeFlag","ecmaVersion","pattern","validator","Math","min","validatePattern","unicode","module","exports"],"sources":["C:/Users/iarha/OneDrive/Desktop/React mini/mega project/remotre code collab/Frontend/node_modules/eslint/lib/rules/utils/regular-expressions.js"],"sourcesContent":["/**\n * @fileoverview Common utils for regular expressions.\n * @author Josh Goldberg\n * @author Toru Nagashima\n */\n\n\"use strict\";\n\nconst { RegExpValidator } = require(\"@eslint-community/regexpp\");\n\nconst REGEXPP_LATEST_ECMA_VERSION = 2024;\n\n/**\n * Checks if the given regular expression pattern would be valid with the `u` flag.\n * @param {number} ecmaVersion ECMAScript version to parse in.\n * @param {string} pattern The regular expression pattern to verify.\n * @returns {boolean} `true` if the pattern would be valid with the `u` flag.\n * `false` if the pattern would be invalid with the `u` flag or the configured\n * ecmaVersion doesn't support the `u` flag.\n */\nfunction isValidWithUnicodeFlag(ecmaVersion, pattern) {\n    if (ecmaVersion <= 5) { // ecmaVersion <= 5 doesn't support the 'u' flag\n        return false;\n    }\n\n    const validator = new RegExpValidator({\n        ecmaVersion: Math.min(ecmaVersion, REGEXPP_LATEST_ECMA_VERSION)\n    });\n\n    try {\n        validator.validatePattern(pattern, void 0, void 0, { unicode: /* uFlag = */ true });\n    } catch {\n        return false;\n    }\n\n    return true;\n}\n\nmodule.exports = {\n    isValidWithUnicodeFlag,\n    REGEXPP_LATEST_ECMA_VERSION\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAM;EAAEA;AAAgB,CAAC,GAAGC,OAAO,CAAC,2BAA2B,CAAC;AAEhE,MAAMC,2BAA2B,GAAG,IAAI;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,sBAAsBA,CAACC,WAAW,EAAEC,OAAO,EAAE;EAClD,IAAID,WAAW,IAAI,CAAC,EAAE;IAAE;IACpB,OAAO,KAAK;EAChB;EAEA,MAAME,SAAS,GAAG,IAAIN,eAAe,CAAC;IAClCI,WAAW,EAAEG,IAAI,CAACC,GAAG,CAACJ,WAAW,EAAEF,2BAA2B;EAClE,CAAC,CAAC;EAEF,IAAI;IACAI,SAAS,CAACG,eAAe,CAACJ,OAAO,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE;MAAEK,OAAO,EAAE,aAAc;IAAK,CAAC,CAAC;EACvF,CAAC,CAAC,MAAM;IACJ,OAAO,KAAK;EAChB;EAEA,OAAO,IAAI;AACf;AAEAC,MAAM,CAACC,OAAO,GAAG;EACbT,sBAAsB;EACtBD;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}