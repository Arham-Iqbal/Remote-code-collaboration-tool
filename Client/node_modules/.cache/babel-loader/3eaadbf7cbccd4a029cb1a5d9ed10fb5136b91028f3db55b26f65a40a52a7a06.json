{"ast":null,"code":"/**\n * @fileoverview Warn when using template string syntax in regular strings\n * @author Jeroen Engels\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\nmodule.exports = {\n  meta: {\n    type: \"problem\",\n    docs: {\n      description: \"Disallow template literal placeholder syntax in regular strings\",\n      recommended: false,\n      url: \"https://eslint.org/docs/latest/rules/no-template-curly-in-string\"\n    },\n    schema: [],\n    messages: {\n      unexpectedTemplateExpression: \"Unexpected template string expression.\"\n    }\n  },\n  create(context) {\n    const regex = /\\$\\{[^}]+\\}/u;\n    return {\n      Literal(node) {\n        if (typeof node.value === \"string\" && regex.test(node.value)) {\n          context.report({\n            node,\n            messageId: \"unexpectedTemplateExpression\"\n          });\n        }\n      }\n    };\n  }\n};","map":{"version":3,"names":["module","exports","meta","type","docs","description","recommended","url","schema","messages","unexpectedTemplateExpression","create","context","regex","Literal","node","value","test","report","messageId"],"sources":["C:/Users/iarha/OneDrive/Desktop/React mini/mega project/remotre code collab/Frontend/node_modules/eslint/lib/rules/no-template-curly-in-string.js"],"sourcesContent":["/**\n * @fileoverview Warn when using template string syntax in regular strings\n * @author Jeroen Engels\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\nmodule.exports = {\n    meta: {\n        type: \"problem\",\n\n        docs: {\n            description: \"Disallow template literal placeholder syntax in regular strings\",\n            recommended: false,\n            url: \"https://eslint.org/docs/latest/rules/no-template-curly-in-string\"\n        },\n\n        schema: [],\n\n        messages: {\n            unexpectedTemplateExpression: \"Unexpected template string expression.\"\n        }\n    },\n\n    create(context) {\n        const regex = /\\$\\{[^}]+\\}/u;\n\n        return {\n            Literal(node) {\n                if (typeof node.value === \"string\" && regex.test(node.value)) {\n                    context.report({\n                        node,\n                        messageId: \"unexpectedTemplateExpression\"\n                    });\n                }\n            }\n        };\n\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAEZ;AACA;AACA;;AAEA;AACAA,MAAM,CAACC,OAAO,GAAG;EACbC,IAAI,EAAE;IACFC,IAAI,EAAE,SAAS;IAEfC,IAAI,EAAE;MACFC,WAAW,EAAE,iEAAiE;MAC9EC,WAAW,EAAE,KAAK;MAClBC,GAAG,EAAE;IACT,CAAC;IAEDC,MAAM,EAAE,EAAE;IAEVC,QAAQ,EAAE;MACNC,4BAA4B,EAAE;IAClC;EACJ,CAAC;EAEDC,MAAMA,CAACC,OAAO,EAAE;IACZ,MAAMC,KAAK,GAAG,cAAc;IAE5B,OAAO;MACHC,OAAOA,CAACC,IAAI,EAAE;QACV,IAAI,OAAOA,IAAI,CAACC,KAAK,KAAK,QAAQ,IAAIH,KAAK,CAACI,IAAI,CAACF,IAAI,CAACC,KAAK,CAAC,EAAE;UAC1DJ,OAAO,CAACM,MAAM,CAAC;YACXH,IAAI;YACJI,SAAS,EAAE;UACf,CAAC,CAAC;QACN;MACJ;IACJ,CAAC;EAEL;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}