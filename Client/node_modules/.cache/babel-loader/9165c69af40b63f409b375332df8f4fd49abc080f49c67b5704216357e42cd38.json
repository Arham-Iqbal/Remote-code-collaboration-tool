{"ast":null,"code":"/**\n * @fileoverview Rule to flag use of arguments.callee and arguments.caller.\n * @author Nicholas C. Zakas\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\nmodule.exports = {\n  meta: {\n    type: \"suggestion\",\n    docs: {\n      description: \"Disallow the use of `arguments.caller` or `arguments.callee`\",\n      recommended: false,\n      url: \"https://eslint.org/docs/latest/rules/no-caller\"\n    },\n    schema: [],\n    messages: {\n      unexpected: \"Avoid arguments.{{prop}}.\"\n    }\n  },\n  create(context) {\n    return {\n      MemberExpression(node) {\n        const objectName = node.object.name,\n          propertyName = node.property.name;\n        if (objectName === \"arguments\" && !node.computed && propertyName && propertyName.match(/^calle[er]$/u)) {\n          context.report({\n            node,\n            messageId: \"unexpected\",\n            data: {\n              prop: propertyName\n            }\n          });\n        }\n      }\n    };\n  }\n};","map":{"version":3,"names":["module","exports","meta","type","docs","description","recommended","url","schema","messages","unexpected","create","context","MemberExpression","node","objectName","object","name","propertyName","property","computed","match","report","messageId","data","prop"],"sources":["C:/Users/iarha/OneDrive/Desktop/React mini/mega project/remotre code collab/Frontend/node_modules/eslint/lib/rules/no-caller.js"],"sourcesContent":["/**\n * @fileoverview Rule to flag use of arguments.callee and arguments.caller.\n * @author Nicholas C. Zakas\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\nmodule.exports = {\n    meta: {\n        type: \"suggestion\",\n\n        docs: {\n            description: \"Disallow the use of `arguments.caller` or `arguments.callee`\",\n            recommended: false,\n            url: \"https://eslint.org/docs/latest/rules/no-caller\"\n        },\n\n        schema: [],\n\n        messages: {\n            unexpected: \"Avoid arguments.{{prop}}.\"\n        }\n    },\n\n    create(context) {\n\n        return {\n\n            MemberExpression(node) {\n                const objectName = node.object.name,\n                    propertyName = node.property.name;\n\n                if (objectName === \"arguments\" && !node.computed && propertyName && propertyName.match(/^calle[er]$/u)) {\n                    context.report({ node, messageId: \"unexpected\", data: { prop: propertyName } });\n                }\n\n            }\n        };\n\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;;AAEA;AACAA,MAAM,CAACC,OAAO,GAAG;EACbC,IAAI,EAAE;IACFC,IAAI,EAAE,YAAY;IAElBC,IAAI,EAAE;MACFC,WAAW,EAAE,8DAA8D;MAC3EC,WAAW,EAAE,KAAK;MAClBC,GAAG,EAAE;IACT,CAAC;IAEDC,MAAM,EAAE,EAAE;IAEVC,QAAQ,EAAE;MACNC,UAAU,EAAE;IAChB;EACJ,CAAC;EAEDC,MAAMA,CAACC,OAAO,EAAE;IAEZ,OAAO;MAEHC,gBAAgBA,CAACC,IAAI,EAAE;QACnB,MAAMC,UAAU,GAAGD,IAAI,CAACE,MAAM,CAACC,IAAI;UAC/BC,YAAY,GAAGJ,IAAI,CAACK,QAAQ,CAACF,IAAI;QAErC,IAAIF,UAAU,KAAK,WAAW,IAAI,CAACD,IAAI,CAACM,QAAQ,IAAIF,YAAY,IAAIA,YAAY,CAACG,KAAK,CAAC,cAAc,CAAC,EAAE;UACpGT,OAAO,CAACU,MAAM,CAAC;YAAER,IAAI;YAAES,SAAS,EAAE,YAAY;YAAEC,IAAI,EAAE;cAAEC,IAAI,EAAEP;YAAa;UAAE,CAAC,CAAC;QACnF;MAEJ;IACJ,CAAC;EAEL;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}