{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iarha\\\\OneDrive\\\\Desktop\\\\React mini\\\\mega project\\\\remotre code collab\\\\Client\\\\src\\\\components\\\\Aisuggest.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Loader2 } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AiSuggest = ({\n  code\n}) => {\n  _s();\n  const [suggestion, setSuggestion] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchAICodeSuggestions = async codeSnippet => {\n    setLoading(true);\n    setError(null);\n\n    // Ensure API key is properly set\n    const apiKey = process.env.NEXT_PUBLIC_OPENAI_API_KEY || '';\n    if (!apiKey) {\n      setError('API key is not configured. Please check your environment variables.');\n      setLoading(false);\n      return;\n    }\n    try {\n      var _data$choices, _data$choices$, _data$choices$$messag;\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${apiKey}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          model: 'gpt-4',\n          messages: [{\n            role: 'system',\n            content: 'You are a helpful code reviewer. Provide clear, concise suggestions for code improvements.'\n          }, {\n            role: 'user',\n            content: `Suggest improvements or corrections for the following code: ${codeSnippet}`\n          }],\n          temperature: 0.7,\n          max_tokens: 500\n        })\n      });\n      if (!response.ok) {\n        var _errorData$error;\n        const errorData = await response.json();\n        throw new Error(((_errorData$error = errorData.error) === null || _errorData$error === void 0 ? void 0 : _errorData$error.message) || `HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      const suggestionText = ((_data$choices = data.choices) === null || _data$choices === void 0 ? void 0 : (_data$choices$ = _data$choices[0]) === null || _data$choices$ === void 0 ? void 0 : (_data$choices$$messag = _data$choices$.message) === null || _data$choices$$messag === void 0 ? void 0 : _data$choices$$messag.content) || 'No suggestion available.';\n      setSuggestion(suggestionText);\n    } catch (error) {\n      console.error('Error fetching AI suggestions:', error);\n      setError(error.message.includes('API key') ? 'Invalid API key. Please check your API key configuration.' : `Error: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleGetSuggestions = () => {\n    if (!(code !== null && code !== void 0 && code.trim())) {\n      setError('Please enter some code first.');\n      return;\n    }\n    fetchAICodeSuggestions(code);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-4 w-full max-w-2xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold\",\n        children: \"AI Code Suggestions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGetSuggestions,\n        disabled: loading,\n        className: \"bg-blue-500 hover:bg-blue-600 disabled:bg-blue-300 text-white px-4 py-2 rounded-md flex items-center gap-2 transition-colors\",\n        children: [loading && /*#__PURE__*/_jsxDEV(Loader2, {\n          className: \"w-4 h-4 animate-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 23\n        }, this), loading ? 'Analyzing...' : 'Get AI Suggestions']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"destructive\",\n      children: /*#__PURE__*/_jsxDEV(AlertDescription, {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), suggestion && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-slate-800 p-4 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-md font-medium mb-2 text-white\",\n        children: \"Suggested Improvements:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"whitespace-pre-wrap text-slate-200 font-mono text-sm\",\n        children: suggestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(AiSuggest, \"TiR/SA21rPyry5RfMYYUNUD9JLc=\");\n_c = AiSuggest;\nexport default AiSuggest;\nvar _c;\n$RefreshReg$(_c, \"AiSuggest\");","map":{"version":3,"names":["React","useState","Alert","AlertDescription","Loader2","jsxDEV","_jsxDEV","AiSuggest","code","_s","suggestion","setSuggestion","loading","setLoading","error","setError","fetchAICodeSuggestions","codeSnippet","apiKey","process","env","NEXT_PUBLIC_OPENAI_API_KEY","_data$choices","_data$choices$","_data$choices$$messag","response","fetch","method","headers","body","JSON","stringify","model","messages","role","content","temperature","max_tokens","ok","_errorData$error","errorData","json","Error","message","status","data","suggestionText","choices","console","includes","handleGetSuggestions","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","variant","_c","$RefreshReg$"],"sources":["C:/Users/iarha/OneDrive/Desktop/React mini/mega project/remotre code collab/Client/src/components/Aisuggest.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { Loader2 } from 'lucide-react';\r\n\r\nconst AiSuggest = ({ code }) => {\r\n  const [suggestion, setSuggestion] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchAICodeSuggestions = async (codeSnippet) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    // Ensure API key is properly set\r\n    const apiKey = process.env.NEXT_PUBLIC_OPENAI_API_KEY || '';\r\n    \r\n    if (!apiKey) {\r\n      setError('API key is not configured. Please check your environment variables.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${apiKey}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          model: 'gpt-4',\r\n          messages: [\r\n            {\r\n              role: 'system',\r\n              content: 'You are a helpful code reviewer. Provide clear, concise suggestions for code improvements.'\r\n            },\r\n            {\r\n              role: 'user',\r\n              content: `Suggest improvements or corrections for the following code: ${codeSnippet}`\r\n            }\r\n          ],\r\n          temperature: 0.7,\r\n          max_tokens: 500\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error?.message || `HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      const suggestionText = data.choices?.[0]?.message?.content || 'No suggestion available.';\r\n      setSuggestion(suggestionText);\r\n    } catch (error) {\r\n      console.error('Error fetching AI suggestions:', error);\r\n      setError(\r\n        error.message.includes('API key') \r\n          ? 'Invalid API key. Please check your API key configuration.'\r\n          : `Error: ${error.message}`\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleGetSuggestions = () => {\r\n    if (!code?.trim()) {\r\n      setError('Please enter some code first.');\r\n      return;\r\n    }\r\n    fetchAICodeSuggestions(code);\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-4 w-full max-w-2xl\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <h3 className=\"text-lg font-semibold\">AI Code Suggestions</h3>\r\n        <button\r\n          onClick={handleGetSuggestions}\r\n          disabled={loading}\r\n          className=\"bg-blue-500 hover:bg-blue-600 disabled:bg-blue-300 text-white px-4 py-2 rounded-md flex items-center gap-2 transition-colors\"\r\n        >\r\n          {loading && <Loader2 className=\"w-4 h-4 animate-spin\" />}\r\n          {loading ? 'Analyzing...' : 'Get AI Suggestions'}\r\n        </button>\r\n      </div>\r\n\r\n      {error && (\r\n        <Alert variant=\"destructive\">\r\n          <AlertDescription>{error}</AlertDescription>\r\n        </Alert>\r\n      )}\r\n\r\n      {suggestion && !error && (\r\n        <div className=\"bg-slate-800 p-4 rounded-lg\">\r\n          <h4 className=\"text-md font-medium mb-2 text-white\">Suggested Improvements:</h4>\r\n          <div className=\"whitespace-pre-wrap text-slate-200 font-mono text-sm\">\r\n            {suggestion}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AiSuggest;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}