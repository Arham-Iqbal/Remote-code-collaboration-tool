{"ast":null,"code":"/**\n * @fileoverview Enforce a maximum number of classes per file\n * @author James Garbutt <https://github.com/43081j>\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\nmodule.exports = {\n  meta: {\n    type: \"suggestion\",\n    docs: {\n      description: \"Enforce a maximum number of classes per file\",\n      recommended: false,\n      url: \"https://eslint.org/docs/latest/rules/max-classes-per-file\"\n    },\n    schema: [{\n      oneOf: [{\n        type: \"integer\",\n        minimum: 1\n      }, {\n        type: \"object\",\n        properties: {\n          ignoreExpressions: {\n            type: \"boolean\"\n          },\n          max: {\n            type: \"integer\",\n            minimum: 1\n          }\n        },\n        additionalProperties: false\n      }]\n    }],\n    messages: {\n      maximumExceeded: \"File has too many classes ({{ classCount }}). Maximum allowed is {{ max }}.\"\n    }\n  },\n  create(context) {\n    const [option = {}] = context.options;\n    const [ignoreExpressions, max] = typeof option === \"number\" ? [false, option || 1] : [option.ignoreExpressions, option.max || 1];\n    let classCount = 0;\n    return {\n      Program() {\n        classCount = 0;\n      },\n      \"Program:exit\"(node) {\n        if (classCount > max) {\n          context.report({\n            node,\n            messageId: \"maximumExceeded\",\n            data: {\n              classCount,\n              max\n            }\n          });\n        }\n      },\n      \"ClassDeclaration\"() {\n        classCount++;\n      },\n      \"ClassExpression\"() {\n        if (!ignoreExpressions) {\n          classCount++;\n        }\n      }\n    };\n  }\n};","map":{"version":3,"names":["module","exports","meta","type","docs","description","recommended","url","schema","oneOf","minimum","properties","ignoreExpressions","max","additionalProperties","messages","maximumExceeded","create","context","option","options","classCount","Program","Program:exit","node","report","messageId","data","ClassDeclaration","ClassExpression"],"sources":["C:/Users/iarha/OneDrive/Desktop/React mini/mega project/remotre code collab/Frontend/node_modules/eslint/lib/rules/max-classes-per-file.js"],"sourcesContent":["/**\n * @fileoverview Enforce a maximum number of classes per file\n * @author James Garbutt <https://github.com/43081j>\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\nmodule.exports = {\n    meta: {\n        type: \"suggestion\",\n\n        docs: {\n            description: \"Enforce a maximum number of classes per file\",\n            recommended: false,\n            url: \"https://eslint.org/docs/latest/rules/max-classes-per-file\"\n        },\n\n        schema: [\n            {\n                oneOf: [\n                    {\n                        type: \"integer\",\n                        minimum: 1\n                    },\n                    {\n                        type: \"object\",\n                        properties: {\n                            ignoreExpressions: {\n                                type: \"boolean\"\n                            },\n                            max: {\n                                type: \"integer\",\n                                minimum: 1\n                            }\n                        },\n                        additionalProperties: false\n                    }\n                ]\n            }\n        ],\n\n        messages: {\n            maximumExceeded: \"File has too many classes ({{ classCount }}). Maximum allowed is {{ max }}.\"\n        }\n    },\n    create(context) {\n        const [option = {}] = context.options;\n        const [ignoreExpressions, max] = typeof option === \"number\"\n            ? [false, option || 1]\n            : [option.ignoreExpressions, option.max || 1];\n\n        let classCount = 0;\n\n        return {\n            Program() {\n                classCount = 0;\n            },\n            \"Program:exit\"(node) {\n                if (classCount > max) {\n                    context.report({\n                        node,\n                        messageId: \"maximumExceeded\",\n                        data: {\n                            classCount,\n                            max\n                        }\n                    });\n                }\n            },\n            \"ClassDeclaration\"() {\n                classCount++;\n            },\n            \"ClassExpression\"() {\n                if (!ignoreExpressions) {\n                    classCount++;\n                }\n            }\n        };\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAEZ;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACAA,MAAM,CAACC,OAAO,GAAG;EACbC,IAAI,EAAE;IACFC,IAAI,EAAE,YAAY;IAElBC,IAAI,EAAE;MACFC,WAAW,EAAE,8CAA8C;MAC3DC,WAAW,EAAE,KAAK;MAClBC,GAAG,EAAE;IACT,CAAC;IAEDC,MAAM,EAAE,CACJ;MACIC,KAAK,EAAE,CACH;QACIN,IAAI,EAAE,SAAS;QACfO,OAAO,EAAE;MACb,CAAC,EACD;QACIP,IAAI,EAAE,QAAQ;QACdQ,UAAU,EAAE;UACRC,iBAAiB,EAAE;YACfT,IAAI,EAAE;UACV,CAAC;UACDU,GAAG,EAAE;YACDV,IAAI,EAAE,SAAS;YACfO,OAAO,EAAE;UACb;QACJ,CAAC;QACDI,oBAAoB,EAAE;MAC1B,CAAC;IAET,CAAC,CACJ;IAEDC,QAAQ,EAAE;MACNC,eAAe,EAAE;IACrB;EACJ,CAAC;EACDC,MAAMA,CAACC,OAAO,EAAE;IACZ,MAAM,CAACC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAGD,OAAO,CAACE,OAAO;IACrC,MAAM,CAACR,iBAAiB,EAAEC,GAAG,CAAC,GAAG,OAAOM,MAAM,KAAK,QAAQ,GACrD,CAAC,KAAK,EAAEA,MAAM,IAAI,CAAC,CAAC,GACpB,CAACA,MAAM,CAACP,iBAAiB,EAAEO,MAAM,CAACN,GAAG,IAAI,CAAC,CAAC;IAEjD,IAAIQ,UAAU,GAAG,CAAC;IAElB,OAAO;MACHC,OAAOA,CAAA,EAAG;QACND,UAAU,GAAG,CAAC;MAClB,CAAC;MACD,cAAcE,CAACC,IAAI,EAAE;QACjB,IAAIH,UAAU,GAAGR,GAAG,EAAE;UAClBK,OAAO,CAACO,MAAM,CAAC;YACXD,IAAI;YACJE,SAAS,EAAE,iBAAiB;YAC5BC,IAAI,EAAE;cACFN,UAAU;cACVR;YACJ;UACJ,CAAC,CAAC;QACN;MACJ,CAAC;MACD,kBAAkBe,CAAA,EAAG;QACjBP,UAAU,EAAE;MAChB,CAAC;MACD,iBAAiBQ,CAAA,EAAG;QAChB,IAAI,CAACjB,iBAAiB,EAAE;UACpBS,UAAU,EAAE;QAChB;MACJ;IACJ,CAAC;EACL;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}